<?xml version="1.0" encoding="UTF-8"?>
<robot generator="Robot 4.0 (Python 3.10.2 on win32)" generated="20220714 14:38:53.035" rpa="false" schemaversion="2">
<suite id="s1" name="Tests" source="C:\Users\super\workspace\Projeto\automacao_pet\tests">
<suite id="s1-s1" name="Api Pet" source="C:\Users\super\workspace\Projeto\automacao_pet\tests\api_pet">
<suite id="s1-s1-s1" name="GET PET PETID" source="C:\Users\super\workspace\Projeto\automacao_pet\tests\api_pet\GET_PET_PETID.robot">
<test id="s1-s1-s1-t1" name="TC01: Search animal by valid id">
<kw name="Given perform a POST request &quot;post/pet&quot; endpoint sending body &quot;valid&quot;" library="POST_PET" type="SETUP" sourcename="Given perform a POST request &quot;post/pet&quot; endpoint sending body &quot;${body}&quot;">
<msg timestamp="20220714 14:38:55.361" level="TRACE">Arguments: [ ${body}='valid' ]</msg>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{headers}</var>
<arg>Content-Type=application/json</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220714 14:38:55.362" level="TRACE">Arguments: [ 'Content-Type=application/json' ]</msg>
<msg timestamp="20220714 14:38:55.363" level="TRACE">Return: {'Content-Type': 'application/json'}</msg>
<msg timestamp="20220714 14:38:55.363" level="INFO">&amp;{headers} = { Content-Type=application/json }</msg>
<status status="PASS" starttime="20220714 14:38:55.362" endtime="20220714 14:38:55.363"/>
</kw>
<if>
<branch type="IF" condition="&quot;${body}&quot; == &quot;valid&quot;">
<kw name="Get File" library="OperatingSystem">
<var>${body}</var>
<arg>${BODY_POST_PET}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20220714 14:38:55.365" level="TRACE">Arguments: [ 'C:\\Users\\super\\workspace\\Projeto\\automacao_pet/resource/data/input/POST_PET.json' ]</msg>
<msg timestamp="20220714 14:38:55.365" level="INFO" html="true">Getting file '&lt;a href="file://C:\Users\super\workspace\Projeto\automacao_pet\resource\data\input\POST_PET.json"&gt;C:\Users\super\workspace\Projeto\automacao_pet\resource\data\input\POST_PET.json&lt;/a&gt;'.</msg>
<msg timestamp="20220714 14:38:55.367" level="TRACE">Return: '{\n  "id": 1,\n  "category": {\n    "id": 0,\n    "name": "string"\n  },\n  "name": "doggie",\n  "photoUrls": [\n    "string"\n  ],\n  "tags": [\n    {\n      "id": 0,\n      "name": "string"\n    }\n  ],\n  "status": "available"\n}'</msg>
<msg timestamp="20220714 14:38:55.367" level="INFO">${body} = {
  "id": 1,
  "category": {
    "id": 0,
    "name": "string"
  },
  "name": "doggie",
  "photoUrls": [
    "string"
  ],
  "tags": [
    {
      "id": 0,
      "name": "string"
    }
  ],
  "status"...</msg>
<status status="PASS" starttime="20220714 14:38:55.364" endtime="20220714 14:38:55.367"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${new_body}</var>
<arg>json.loads($body)</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20220714 14:38:55.368" level="TRACE">Arguments: [ 'json.loads($body)' | 'json' ]</msg>
<msg timestamp="20220714 14:38:55.377" level="TRACE">Return: {'category': {'id': 0, 'name': 'string'},
 'id': 1,
 'name': 'doggie',
 'photoUrls': ['string'],
 'status': 'available',
 'tags': [{'id': 0, 'name': 'string'}]}</msg>
<msg timestamp="20220714 14:38:55.378" level="INFO">${new_body} = {'id': 1, 'category': {'id': 0, 'name': 'string'}, 'name': 'doggie', 'photoUrls': ['string'], 'tags': [{'id': 0, 'name': 'string'}], 'status': 'available'}</msg>
<status status="PASS" starttime="20220714 14:38:55.367" endtime="20220714 14:38:55.378"/>
</kw>
<kw name="POST" library="RequestsLibrary">
<var>${response}</var>
<arg>${URL_BASE.base}${URL_API.pet}</arg>
<arg>json=${new_body}</arg>
<arg>headers=&amp;{headers}</arg>
<arg>expected_status=any</arg>
<doc>Sends a POST request.</doc>
<msg timestamp="20220714 14:38:55.383" level="TRACE">Arguments: [ 'https://petstore.swagger.io/v2/pet' | json={'category': {'id': 0, 'name': 'string'},
 'id': 1,
 'name': 'doggie',
 'photoUrls': ['string'],
 'status': 'available',
 'tags': [{'id': 0, 'name': 'string'}]} | headers={'Content-Type': 'application/json'} | expected_status='any' ]</msg>
<msg timestamp="20220714 14:38:55.397" level="DEBUG">Starting new HTTPS connection (1): petstore.swagger.io:443</msg>
<msg timestamp="20220714 14:38:56.548" level="DEBUG">https://petstore.swagger.io:443 "POST /v2/pet HTTP/1.1" 200 None</msg>
<msg timestamp="20220714 14:38:56.554" level="INFO">POST Request : url=https://petstore.swagger.io/v2/pet 
 path_url=/v2/pet 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '155'} 
 body=b'{"id": 1, "category": {"id": 0, "name": "string"}, "name": "doggie", "photoUrls": ["string"], "tags": [{"id": 0, "name": "string"}], "status": "available"}' 
 </msg>
<msg timestamp="20220714 14:38:56.554" level="INFO">POST Response : url=https://petstore.swagger.io/v2/pet 
 status=200, reason=OK 
 headers={'Date': 'Thu, 14 Jul 2022 17:38:56 GMT', 'Content-Type': 'application/json', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Access-Control-Allow-Origin': '*', 'Access-Control-Allow-Methods': 'GET, POST, DELETE, PUT', 'Access-Control-Allow-Headers': 'Content-Type, api_key, Authorization', 'Server': 'Jetty(9.2.9.v20150224)'} 
 body={"id":1,"category":{"id":0,"name":"string"},"name":"doggie","photoUrls":["string"],"tags":[{"id":0,"name":"string"}],"status":"available"} 
 </msg>
<msg timestamp="20220714 14:38:56.554" level="TRACE">Return: &lt;Response [200]&gt;</msg>
<msg timestamp="20220714 14:38:56.555" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220714 14:38:55.379" endtime="20220714 14:38:56.555"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${response.json()["id"]}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220714 14:38:56.558" level="TRACE">Arguments: [ 1 ]</msg>
<msg timestamp="20220714 14:38:56.558" level="INFO">1</msg>
<msg timestamp="20220714 14:38:56.558" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20220714 14:38:56.555" endtime="20220714 14:38:56.558"/>
</kw>
<kw name="Get From Dictionary" library="Collections">
<var>${ID}</var>
<arg>${response.json()}</arg>
<arg>id</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<msg timestamp="20220714 14:38:56.561" level="TRACE">Arguments: [ {'category': {'id': 0, 'name': 'string'},
 'id': 1,
 'name': 'doggie',
 'photoUrls': ['string'],
 'status': 'available',
 'tags': [{'id': 0, 'name': 'string'}]} | 'id' ]</msg>
<msg timestamp="20220714 14:38:56.563" level="TRACE">Return: 1</msg>
<msg timestamp="20220714 14:38:56.563" level="INFO">${ID} = 1</msg>
<status status="PASS" starttime="20220714 14:38:56.559" endtime="20220714 14:38:56.563"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${ID}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220714 14:38:56.564" level="TRACE">Arguments: [ '${ID}' ]</msg>
<msg timestamp="20220714 14:38:56.565" level="INFO">${ID} = 1</msg>
<msg timestamp="20220714 14:38:56.565" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20220714 14:38:56.564" endtime="20220714 14:38:56.565"/>
</kw>
<status status="PASS" starttime="20220714 14:38:55.364" endtime="20220714 14:38:56.565"/>
</branch>
<branch type="ELSE">
<kw name="Get File" library="OperatingSystem">
<var>${new_body}</var>
<arg>${BODY_EMPTY}</arg>
<doc>Returns the contents of a specified file.</doc>
<status status="NOT RUN" starttime="20220714 14:38:56.566" endtime="20220714 14:38:56.566"/>
</kw>
<kw name="POST" library="RequestsLibrary">
<var>${response}</var>
<arg>${URL_BASE.base}${URL_API.pet}</arg>
<arg>data=${new_body}</arg>
<arg>headers=&amp;{headers}</arg>
<arg>expected_status=any</arg>
<doc>Sends a POST request.</doc>
<status status="NOT RUN" starttime="20220714 14:38:56.566" endtime="20220714 14:38:56.567"/>
</kw>
<status status="NOT RUN" starttime="20220714 14:38:56.566" endtime="20220714 14:38:56.567"/>
</branch>
<status status="PASS" starttime="20220714 14:38:55.363" endtime="20220714 14:38:56.567"/>
</if>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220714 14:38:56.568" level="TRACE">Arguments: [ '${response}' ]</msg>
<msg timestamp="20220714 14:38:56.569" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<msg timestamp="20220714 14:38:56.569" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20220714 14:38:56.568" endtime="20220714 14:38:56.569"/>
</kw>
<msg timestamp="20220714 14:38:56.569" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20220714 14:38:55.360" endtime="20220714 14:38:56.570"/>
</kw>
<kw name="Given perform a GET request &quot;get/pet/{petid}&quot; endpoint sending petId &quot;valid&quot;" library="GET_PET_PETID" sourcename="Given perform a GET request &quot;get/pet/{petid}&quot; endpoint sending petId &quot;${pet_id}&quot;">
<msg timestamp="20220714 14:38:56.572" level="TRACE">Arguments: [ ${pet_id}='valid' ]</msg>
<if>
<branch type="IF" condition="&quot;${pet_id}&quot; == &quot;valid&quot;">
<kw name="Set Variable" library="BuiltIn">
<var>${pet_id}</var>
<arg>${ID}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20220714 14:38:56.574" level="TRACE">Arguments: [ 1 ]</msg>
<msg timestamp="20220714 14:38:56.575" level="TRACE">Return: 1</msg>
<msg timestamp="20220714 14:38:56.575" level="INFO">${pet_id} = 1</msg>
<status status="PASS" starttime="20220714 14:38:56.574" endtime="20220714 14:38:56.575"/>
</kw>
<status status="PASS" starttime="20220714 14:38:56.573" endtime="20220714 14:38:56.575"/>
</branch>
<status status="PASS" starttime="20220714 14:38:56.573" endtime="20220714 14:38:56.575"/>
</if>
<kw name="Format String" library="String">
<var>${new_url}</var>
<arg>${URL_API_ENDPOINT.pet_id}</arg>
<arg>petId=${pet_id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220714 14:38:56.578" level="TRACE">Arguments: [ '/pet/{petId}' | petId=1 ]</msg>
<msg timestamp="20220714 14:38:56.579" level="TRACE">Return: '/pet/1'</msg>
<msg timestamp="20220714 14:38:56.579" level="INFO">${new_url} = /pet/1</msg>
<status status="PASS" starttime="20220714 14:38:56.576" endtime="20220714 14:38:56.579"/>
</kw>
<kw name="GET" library="RequestsLibrary">
<var>${response}</var>
<arg>${URL_BASE.base}${new_url}</arg>
<arg>expected_status=any</arg>
<doc>Sends a GET request.</doc>
<msg timestamp="20220714 14:38:56.582" level="TRACE">Arguments: [ 'https://petstore.swagger.io/v2/pet/1' | expected_status='any' ]</msg>
<msg timestamp="20220714 14:38:56.588" level="DEBUG">Starting new HTTPS connection (1): petstore.swagger.io:443</msg>
<msg timestamp="20220714 14:38:57.381" level="DEBUG">https://petstore.swagger.io:443 "GET /v2/pet/1 HTTP/1.1" 200 None</msg>
<msg timestamp="20220714 14:38:57.386" level="INFO">GET Request : url=https://petstore.swagger.io/v2/pet/1 
 path_url=/v2/pet/1 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20220714 14:38:57.387" level="INFO">GET Response : url=https://petstore.swagger.io/v2/pet/1 
 status=200, reason=OK 
 headers={'Date': 'Thu, 14 Jul 2022 17:38:57 GMT', 'Content-Type': 'application/json', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Access-Control-Allow-Origin': '*', 'Access-Control-Allow-Methods': 'GET, POST, DELETE, PUT', 'Access-Control-Allow-Headers': 'Content-Type, api_key, Authorization', 'Server': 'Jetty(9.2.9.v20150224)'} 
 body={"id":1,"category":{"id":0,"name":"string"},"name":"doggie","photoUrls":["string"],"tags":[{"id":0,"name":"string"}],"status":"available"} 
 </msg>
<msg timestamp="20220714 14:38:57.387" level="TRACE">Return: &lt;Response [200]&gt;</msg>
<msg timestamp="20220714 14:38:57.387" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220714 14:38:56.580" endtime="20220714 14:38:57.388"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220714 14:38:57.389" level="TRACE">Arguments: [ '${response}' ]</msg>
<msg timestamp="20220714 14:38:57.390" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<msg timestamp="20220714 14:38:57.390" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20220714 14:38:57.388" endtime="20220714 14:38:57.390"/>
</kw>
<msg timestamp="20220714 14:38:57.391" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20220714 14:38:56.572" endtime="20220714 14:38:57.391"/>
</kw>
<kw name="Then expected status code &quot;200&quot;" library="kws_shared" sourcename="Then expected status code &quot;${expected}&quot;">
<doc>Keyword responsible for validating the status code upon test requirement.</doc>
<msg timestamp="20220714 14:38:57.394" level="TRACE">Arguments: [ ${expected}='200' ]</msg>
<kw name="Status Should Be" library="RequestsLibrary">
<arg>${expected}</arg>
<doc>Fails if response status code is different than the expected.</doc>
<msg timestamp="20220714 14:38:57.395" level="TRACE">Arguments: [ '200' ]</msg>
<msg timestamp="20220714 14:38:57.396" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20220714 14:38:57.395" endtime="20220714 14:38:57.396"/>
</kw>
<msg timestamp="20220714 14:38:57.396" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20220714 14:38:57.393" endtime="20220714 14:38:57.396"/>
</kw>
<kw name="And the contract of the request &quot;petId successfully&quot;" library="kws_shared" sourcename="And the contract of the request &quot;${schema}&quot;">
<doc>Keyword responsible for getting the schema model received by parameter by gherkin and validating it with the api response.</doc>
<msg timestamp="20220714 14:38:57.399" level="TRACE">Arguments: [ ${schema}='petId successfully' ]</msg>
<kw name="Get Schema Json" library="helper">
<var>${arg_schema}</var>
<arg>${schema}</arg>
<doc>Keyword responsável por pegar o arquivo "schemas.json"
Converte para json e retorna o arquivo formatado.</doc>
<msg timestamp="20220714 14:38:57.402" level="TRACE">Arguments: [ ${text}='petId successfully' ]</msg>
<kw name="Get File" library="OperatingSystem">
<var>${file}</var>
<arg>${ROOT}/resource/data/schemas/schemas.json</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20220714 14:38:57.403" level="TRACE">Arguments: [ 'C:\\Users\\super\\workspace\\Projeto\\automacao_pet/resource/data/schemas/schemas.json' ]</msg>
<msg timestamp="20220714 14:38:57.404" level="INFO" html="true">Getting file '&lt;a href="file://C:\Users\super\workspace\Projeto\automacao_pet\resource\data\schemas\schemas.json"&gt;C:\Users\super\workspace\Projeto\automacao_pet\resource\data\schemas\schemas.json&lt;/a&gt;'.</msg>
<msg timestamp="20220714 14:38:57.405" level="TRACE">Return: '{\n    "petId successfully": "api_pet/get_petid.json",\n    "pet registered successfully": "api_pet/post_pet.json",\n    "orderId successfully": "api_store/get_store_orderid.json",\n    "order registered successfully": "api_store/post_store.json",\n    "pet changed successfully": "api_pet/put_pet.json"\n}'</msg>
<msg timestamp="20220714 14:38:57.405" level="INFO">${file} = {
    "petId successfully": "api_pet/get_petid.json",
    "pet registered successfully": "api_pet/post_pet.json",
    "orderId successfully": "api_store/get_store_orderid.json",
    "order registered ...</msg>
<status status="PASS" starttime="20220714 14:38:57.403" endtime="20220714 14:38:57.406"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${json}</var>
<arg>json.loads($file)</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20220714 14:38:57.407" level="TRACE">Arguments: [ 'json.loads($file)' | 'json' ]</msg>
<msg timestamp="20220714 14:38:57.408" level="TRACE">Return: {'order registered successfully': 'api_store/post_store.json',
 'orderId successfully': 'api_store/get_store_orderid.json',
 'pet changed successfully': 'api_pet/put_pet.json',
 'pet registered successfully': 'api_pet/post_pet.json',
 'petId successfully': 'api_pet/get_petid.json'}</msg>
<msg timestamp="20220714 14:38:57.408" level="INFO">${json} = {'petId successfully': 'api_pet/get_petid.json', 'pet registered successfully': 'api_pet/post_pet.json', 'orderId successfully': 'api_store/get_store_orderid.json', 'order registered successfully': 'a...</msg>
<status status="PASS" starttime="20220714 14:38:57.406" endtime="20220714 14:38:57.409"/>
</kw>
<kw name="Get From Dictionary" library="Collections">
<var>${json_schemas}</var>
<arg>${json}</arg>
<arg>${text}</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<msg timestamp="20220714 14:38:57.410" level="TRACE">Arguments: [ {'order registered successfully': 'api_store/post_store.json',
 'orderId successfully': 'api_store/get_store_orderid.json',
 'pet changed successfully': 'api_pet/put_pet.json',
 'pet registered successfully': 'api_pet/post_pet.json',
 'petId successfully': 'api_pet/get_petid.json'} | 'petId successfully' ]</msg>
<msg timestamp="20220714 14:38:57.411" level="TRACE">Return: 'api_pet/get_petid.json'</msg>
<msg timestamp="20220714 14:38:57.411" level="INFO">${json_schemas} = api_pet/get_petid.json</msg>
<status status="PASS" starttime="20220714 14:38:57.409" endtime="20220714 14:38:57.411"/>
</kw>
<msg timestamp="20220714 14:38:57.412" level="TRACE">Return: 'api_pet/get_petid.json'</msg>
<msg timestamp="20220714 14:38:57.412" level="INFO">${arg_schema} = api_pet/get_petid.json</msg>
<status status="PASS" starttime="20220714 14:38:57.400" endtime="20220714 14:38:57.412"/>
</kw>
<kw name="Validate Jsonschema From File" library="JsonValidator">
<arg>${response.text}</arg>
<arg>${ROOT}/resource/data/schemas/${arg_schema}</arg>
<doc>Validate JSON according to schema, loaded from a file.</doc>
<msg timestamp="20220714 14:38:57.415" level="TRACE">Arguments: [ '{"id":1,"category":{"id":0,"name":"string"},"name":"doggie","photoUrls":["string"],"tags":[{"id":0,"name":"string"}],"status":"available"}' | 'C:\\Users\\super\\workspace\\Projeto\\automacao_pet/resource/data/schemas/api_pet/get_petid.json' ]</msg>
<msg timestamp="20220714 14:38:57.457" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20220714 14:38:57.413" endtime="20220714 14:38:57.457"/>
</kw>
<msg timestamp="20220714 14:38:57.458" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20220714 14:38:57.398" endtime="20220714 14:38:57.458"/>
</kw>
<doc>Test responsible for making the user able to search for registration information by sending a valid petId.</doc>
<tag>API_pet</tag>
<tag>EP_petId</tag>
<tag>TC01</tag>
<status status="PASS" starttime="20220714 14:38:55.358" endtime="20220714 14:38:57.460"/>
</test>
<test id="s1-s1-s1-t2" name="TC02: Validate behavior when informing invalid id">
<kw name="Given perform a GET request &quot;get/pet/{petid}&quot; endpoint sending petId &quot;9999999&quot;" library="GET_PET_PETID" sourcename="Given perform a GET request &quot;get/pet/{petid}&quot; endpoint sending petId &quot;${pet_id}&quot;">
<msg timestamp="20220714 14:38:57.471" level="TRACE">Arguments: [ ${pet_id}='9999999' ]</msg>
<if>
<branch type="IF" condition="&quot;${pet_id}&quot; == &quot;valid&quot;">
<kw name="Set Variable" library="BuiltIn">
<var>${pet_id}</var>
<arg>${ID}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20220714 14:38:57.473" endtime="20220714 14:38:57.473"/>
</kw>
<status status="NOT RUN" starttime="20220714 14:38:57.472" endtime="20220714 14:38:57.473"/>
</branch>
<status status="PASS" starttime="20220714 14:38:57.471" endtime="20220714 14:38:57.473"/>
</if>
<kw name="Format String" library="String">
<var>${new_url}</var>
<arg>${URL_API_ENDPOINT.pet_id}</arg>
<arg>petId=${pet_id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220714 14:38:57.476" level="TRACE">Arguments: [ '/pet/{petId}' | petId='9999999' ]</msg>
<msg timestamp="20220714 14:38:57.477" level="TRACE">Return: '/pet/9999999'</msg>
<msg timestamp="20220714 14:38:57.477" level="INFO">${new_url} = /pet/9999999</msg>
<status status="PASS" starttime="20220714 14:38:57.474" endtime="20220714 14:38:57.477"/>
</kw>
<kw name="GET" library="RequestsLibrary">
<var>${response}</var>
<arg>${URL_BASE.base}${new_url}</arg>
<arg>expected_status=any</arg>
<doc>Sends a GET request.</doc>
<msg timestamp="20220714 14:38:57.480" level="TRACE">Arguments: [ 'https://petstore.swagger.io/v2/pet/9999999' | expected_status='any' ]</msg>
<msg timestamp="20220714 14:38:57.487" level="DEBUG">Starting new HTTPS connection (1): petstore.swagger.io:443</msg>
<msg timestamp="20220714 14:38:58.302" level="DEBUG">https://petstore.swagger.io:443 "GET /v2/pet/9999999 HTTP/1.1" 404 None</msg>
<msg timestamp="20220714 14:38:58.308" level="INFO">GET Request : url=https://petstore.swagger.io/v2/pet/9999999 
 path_url=/v2/pet/9999999 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20220714 14:38:58.309" level="INFO">GET Response : url=https://petstore.swagger.io/v2/pet/9999999 
 status=404, reason=Not Found 
 headers={'Date': 'Thu, 14 Jul 2022 17:38:58 GMT', 'Content-Type': 'application/json', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Access-Control-Allow-Origin': '*', 'Access-Control-Allow-Methods': 'GET, POST, DELETE, PUT', 'Access-Control-Allow-Headers': 'Content-Type, api_key, Authorization', 'Server': 'Jetty(9.2.9.v20150224)'} 
 body={"code":1,"type":"error","message":"Pet not found"} 
 </msg>
<msg timestamp="20220714 14:38:58.309" level="TRACE">Return: &lt;Response [404]&gt;</msg>
<msg timestamp="20220714 14:38:58.310" level="INFO">${response} = &lt;Response [404]&gt;</msg>
<status status="PASS" starttime="20220714 14:38:57.478" endtime="20220714 14:38:58.310"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220714 14:38:58.311" level="TRACE">Arguments: [ '${response}' ]</msg>
<msg timestamp="20220714 14:38:58.311" level="INFO">${response} = &lt;Response [404]&gt;</msg>
<msg timestamp="20220714 14:38:58.312" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20220714 14:38:58.310" endtime="20220714 14:38:58.312"/>
</kw>
<msg timestamp="20220714 14:38:58.312" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20220714 14:38:57.470" endtime="20220714 14:38:58.312"/>
</kw>
<kw name="Then expected status code &quot;404&quot;" library="kws_shared" sourcename="Then expected status code &quot;${expected}&quot;">
<doc>Keyword responsible for validating the status code upon test requirement.</doc>
<msg timestamp="20220714 14:38:58.315" level="TRACE">Arguments: [ ${expected}='404' ]</msg>
<kw name="Status Should Be" library="RequestsLibrary">
<arg>${expected}</arg>
<doc>Fails if response status code is different than the expected.</doc>
<msg timestamp="20220714 14:38:58.317" level="TRACE">Arguments: [ '404' ]</msg>
<msg timestamp="20220714 14:38:58.317" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20220714 14:38:58.316" endtime="20220714 14:38:58.317"/>
</kw>
<msg timestamp="20220714 14:38:58.317" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20220714 14:38:58.314" endtime="20220714 14:38:58.318"/>
</kw>
<kw name="And the request must contain the return message &quot;Pet not found&quot;" library="kws_shared" sourcename="And the request must contain the return message &quot;${message}&quot;">
<msg timestamp="20220714 14:38:58.321" level="TRACE">Arguments: [ ${message}='Pet not found' ]</msg>
<kw name="Should Contain" library="BuiltIn">
<arg>${response.text}</arg>
<arg>"${message}"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<msg timestamp="20220714 14:38:58.324" level="TRACE">Arguments: [ '{"code":1,"type":"error","message":"Pet not found"}' | '"Pet not found"' ]</msg>
<msg timestamp="20220714 14:38:58.324" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20220714 14:38:58.321" endtime="20220714 14:38:58.324"/>
</kw>
<msg timestamp="20220714 14:38:58.325" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20220714 14:38:58.319" endtime="20220714 14:38:58.325"/>
</kw>
<doc>Test responsible for validating that the user cannot retrieve information from the registration by sending an invalid petId.</doc>
<tag>API_pet</tag>
<tag>EP_petId</tag>
<tag>TC02</tag>
<status status="PASS" starttime="20220714 14:38:57.465" endtime="20220714 14:38:58.326"/>
</test>
<test id="s1-s1-s1-t3" name="TC03: Search animal sending empty id">
<kw name="Given perform a GET request &quot;get/pet/{petid}&quot; endpoint sending petId &quot;&quot;" library="GET_PET_PETID" sourcename="Given perform a GET request &quot;get/pet/{petid}&quot; endpoint sending petId &quot;${pet_id}&quot;">
<msg timestamp="20220714 14:38:58.337" level="TRACE">Arguments: [ ${pet_id}='' ]</msg>
<if>
<branch type="IF" condition="&quot;${pet_id}&quot; == &quot;valid&quot;">
<kw name="Set Variable" library="BuiltIn">
<var>${pet_id}</var>
<arg>${ID}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20220714 14:38:58.338" endtime="20220714 14:38:58.338"/>
</kw>
<status status="NOT RUN" starttime="20220714 14:38:58.337" endtime="20220714 14:38:58.338"/>
</branch>
<status status="PASS" starttime="20220714 14:38:58.337" endtime="20220714 14:38:58.338"/>
</if>
<kw name="Format String" library="String">
<var>${new_url}</var>
<arg>${URL_API_ENDPOINT.pet_id}</arg>
<arg>petId=${pet_id}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220714 14:38:58.342" level="TRACE">Arguments: [ '/pet/{petId}' | petId='' ]</msg>
<msg timestamp="20220714 14:38:58.343" level="TRACE">Return: '/pet/'</msg>
<msg timestamp="20220714 14:38:58.343" level="INFO">${new_url} = /pet/</msg>
<status status="PASS" starttime="20220714 14:38:58.339" endtime="20220714 14:38:58.343"/>
</kw>
<kw name="GET" library="RequestsLibrary">
<var>${response}</var>
<arg>${URL_BASE.base}${new_url}</arg>
<arg>expected_status=any</arg>
<doc>Sends a GET request.</doc>
<msg timestamp="20220714 14:38:58.346" level="TRACE">Arguments: [ 'https://petstore.swagger.io/v2/pet/' | expected_status='any' ]</msg>
<msg timestamp="20220714 14:38:58.354" level="DEBUG">Starting new HTTPS connection (1): petstore.swagger.io:443</msg>
<msg timestamp="20220714 14:38:59.222" level="DEBUG">https://petstore.swagger.io:443 "GET /v2/pet/ HTTP/1.1" 405 102</msg>
<msg timestamp="20220714 14:38:59.228" level="INFO">GET Request : url=https://petstore.swagger.io/v2/pet/ 
 path_url=/v2/pet/ 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20220714 14:38:59.229" level="INFO">GET Response : url=https://petstore.swagger.io/v2/pet/ 
 status=405, reason=Method Not Allowed 
 headers={'Date': 'Thu, 14 Jul 2022 17:38:59 GMT', 'Content-Type': 'application/xml', 'Content-Length': '102', 'Connection': 'keep-alive', 'Access-Control-Allow-Origin': '*', 'Access-Control-Allow-Methods': 'GET, POST, DELETE, PUT', 'Access-Control-Allow-Headers': 'Content-Type, api_key, Authorization', 'Server': 'Jetty(9.2.9.v20150224)'} 
 body=&lt;?xml version="1.0" encoding="UTF-8" standalone="yes"?&gt;&lt;apiResponse&gt;&lt;type&gt;unknown&lt;/type&gt;&lt;/apiResponse&gt; 
 </msg>
<msg timestamp="20220714 14:38:59.229" level="TRACE">Return: &lt;Response [405]&gt;</msg>
<msg timestamp="20220714 14:38:59.229" level="INFO">${response} = &lt;Response [405]&gt;</msg>
<status status="PASS" starttime="20220714 14:38:58.344" endtime="20220714 14:38:59.229"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220714 14:38:59.231" level="TRACE">Arguments: [ '${response}' ]</msg>
<msg timestamp="20220714 14:38:59.232" level="INFO">${response} = &lt;Response [405]&gt;</msg>
<msg timestamp="20220714 14:38:59.232" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20220714 14:38:59.230" endtime="20220714 14:38:59.232"/>
</kw>
<msg timestamp="20220714 14:38:59.232" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20220714 14:38:58.336" endtime="20220714 14:38:59.233"/>
</kw>
<kw name="Then expected status code &quot;405&quot;" library="kws_shared" sourcename="Then expected status code &quot;${expected}&quot;">
<doc>Keyword responsible for validating the status code upon test requirement.</doc>
<msg timestamp="20220714 14:38:59.236" level="TRACE">Arguments: [ ${expected}='405' ]</msg>
<kw name="Status Should Be" library="RequestsLibrary">
<arg>${expected}</arg>
<doc>Fails if response status code is different than the expected.</doc>
<msg timestamp="20220714 14:38:59.237" level="TRACE">Arguments: [ '405' ]</msg>
<msg timestamp="20220714 14:38:59.237" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20220714 14:38:59.236" endtime="20220714 14:38:59.238"/>
</kw>
<msg timestamp="20220714 14:38:59.238" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20220714 14:38:59.235" endtime="20220714 14:38:59.239"/>
</kw>
<doc>Test responsible for validating that the user cannot retrieve information from the registration by sending an empty petId.</doc>
<tag>API_pet</tag>
<tag>EP_petId</tag>
<tag>TC03</tag>
<status status="PASS" starttime="20220714 14:38:58.331" endtime="20220714 14:38:59.241"/>
</test>
<status status="PASS" starttime="20220714 14:38:53.144" endtime="20220714 14:38:59.268"/>
</suite>
<suite id="s1-s1-s2" name="POST PET" source="C:\Users\super\workspace\Projeto\automacao_pet\tests\api_pet\POST_PET.robot">
<test id="s1-s1-s2-t1" name="TC04: Insert animal successfully">
<kw name="Given perform a POST request &quot;post/pet&quot; endpoint sending body &quot;valid&quot;" library="POST_PET" sourcename="Given perform a POST request &quot;post/pet&quot; endpoint sending body &quot;${body}&quot;">
<msg timestamp="20220714 14:38:59.368" level="TRACE">Arguments: [ ${body}='valid' ]</msg>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{headers}</var>
<arg>Content-Type=application/json</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220714 14:38:59.369" level="TRACE">Arguments: [ 'Content-Type=application/json' ]</msg>
<msg timestamp="20220714 14:38:59.370" level="TRACE">Return: {'Content-Type': 'application/json'}</msg>
<msg timestamp="20220714 14:38:59.370" level="INFO">&amp;{headers} = { Content-Type=application/json }</msg>
<status status="PASS" starttime="20220714 14:38:59.369" endtime="20220714 14:38:59.370"/>
</kw>
<if>
<branch type="IF" condition="&quot;${body}&quot; == &quot;valid&quot;">
<kw name="Get File" library="OperatingSystem">
<var>${body}</var>
<arg>${BODY_POST_PET}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20220714 14:38:59.372" level="TRACE">Arguments: [ 'C:\\Users\\super\\workspace\\Projeto\\automacao_pet/resource/data/input/POST_PET.json' ]</msg>
<msg timestamp="20220714 14:38:59.373" level="INFO" html="true">Getting file '&lt;a href="file://C:\Users\super\workspace\Projeto\automacao_pet\resource\data\input\POST_PET.json"&gt;C:\Users\super\workspace\Projeto\automacao_pet\resource\data\input\POST_PET.json&lt;/a&gt;'.</msg>
<msg timestamp="20220714 14:38:59.374" level="TRACE">Return: '{\n  "id": 1,\n  "category": {\n    "id": 0,\n    "name": "string"\n  },\n  "name": "doggie",\n  "photoUrls": [\n    "string"\n  ],\n  "tags": [\n    {\n      "id": 0,\n      "name": "string"\n    }\n  ],\n  "status": "available"\n}'</msg>
<msg timestamp="20220714 14:38:59.374" level="INFO">${body} = {
  "id": 1,
  "category": {
    "id": 0,
    "name": "string"
  },
  "name": "doggie",
  "photoUrls": [
    "string"
  ],
  "tags": [
    {
      "id": 0,
      "name": "string"
    }
  ],
  "status"...</msg>
<status status="PASS" starttime="20220714 14:38:59.372" endtime="20220714 14:38:59.375"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${new_body}</var>
<arg>json.loads($body)</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20220714 14:38:59.376" level="TRACE">Arguments: [ 'json.loads($body)' | 'json' ]</msg>
<msg timestamp="20220714 14:38:59.377" level="TRACE">Return: {'category': {'id': 0, 'name': 'string'},
 'id': 1,
 'name': 'doggie',
 'photoUrls': ['string'],
 'status': 'available',
 'tags': [{'id': 0, 'name': 'string'}]}</msg>
<msg timestamp="20220714 14:38:59.378" level="INFO">${new_body} = {'id': 1, 'category': {'id': 0, 'name': 'string'}, 'name': 'doggie', 'photoUrls': ['string'], 'tags': [{'id': 0, 'name': 'string'}], 'status': 'available'}</msg>
<status status="PASS" starttime="20220714 14:38:59.375" endtime="20220714 14:38:59.378"/>
</kw>
<kw name="POST" library="RequestsLibrary">
<var>${response}</var>
<arg>${URL_BASE.base}${URL_API.pet}</arg>
<arg>json=${new_body}</arg>
<arg>headers=&amp;{headers}</arg>
<arg>expected_status=any</arg>
<doc>Sends a POST request.</doc>
<msg timestamp="20220714 14:38:59.385" level="TRACE">Arguments: [ 'https://petstore.swagger.io/v2/pet' | json={'category': {'id': 0, 'name': 'string'},
 'id': 1,
 'name': 'doggie',
 'photoUrls': ['string'],
 'status': 'available',
 'tags': [{'id': 0, 'name': 'string'}]} | headers={'Content-Type': 'application/json'} | expected_status='any' ]</msg>
<msg timestamp="20220714 14:38:59.393" level="DEBUG">Starting new HTTPS connection (1): petstore.swagger.io:443</msg>
<msg timestamp="20220714 14:39:00.354" level="DEBUG">https://petstore.swagger.io:443 "POST /v2/pet HTTP/1.1" 200 None</msg>
<msg timestamp="20220714 14:39:00.360" level="INFO">POST Request : url=https://petstore.swagger.io/v2/pet 
 path_url=/v2/pet 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '155'} 
 body=b'{"id": 1, "category": {"id": 0, "name": "string"}, "name": "doggie", "photoUrls": ["string"], "tags": [{"id": 0, "name": "string"}], "status": "available"}' 
 </msg>
<msg timestamp="20220714 14:39:00.360" level="INFO">POST Response : url=https://petstore.swagger.io/v2/pet 
 status=200, reason=OK 
 headers={'Date': 'Thu, 14 Jul 2022 17:39:00 GMT', 'Content-Type': 'application/json', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Access-Control-Allow-Origin': '*', 'Access-Control-Allow-Methods': 'GET, POST, DELETE, PUT', 'Access-Control-Allow-Headers': 'Content-Type, api_key, Authorization', 'Server': 'Jetty(9.2.9.v20150224)'} 
 body={"id":1,"category":{"id":0,"name":"string"},"name":"doggie","photoUrls":["string"],"tags":[{"id":0,"name":"string"}],"status":"available"} 
 </msg>
<msg timestamp="20220714 14:39:00.361" level="TRACE">Return: &lt;Response [200]&gt;</msg>
<msg timestamp="20220714 14:39:00.361" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220714 14:38:59.379" endtime="20220714 14:39:00.362"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${response.json()["id"]}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220714 14:39:00.365" level="TRACE">Arguments: [ 1 ]</msg>
<msg timestamp="20220714 14:39:00.365" level="INFO">1</msg>
<msg timestamp="20220714 14:39:00.365" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20220714 14:39:00.362" endtime="20220714 14:39:00.365"/>
</kw>
<kw name="Get From Dictionary" library="Collections">
<var>${ID}</var>
<arg>${response.json()}</arg>
<arg>id</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<msg timestamp="20220714 14:39:00.368" level="TRACE">Arguments: [ {'category': {'id': 0, 'name': 'string'},
 'id': 1,
 'name': 'doggie',
 'photoUrls': ['string'],
 'status': 'available',
 'tags': [{'id': 0, 'name': 'string'}]} | 'id' ]</msg>
<msg timestamp="20220714 14:39:00.369" level="TRACE">Return: 1</msg>
<msg timestamp="20220714 14:39:00.370" level="INFO">${ID} = 1</msg>
<status status="PASS" starttime="20220714 14:39:00.366" endtime="20220714 14:39:00.370"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${ID}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220714 14:39:00.371" level="TRACE">Arguments: [ '${ID}' ]</msg>
<msg timestamp="20220714 14:39:00.372" level="INFO">${ID} = 1</msg>
<msg timestamp="20220714 14:39:00.372" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20220714 14:39:00.370" endtime="20220714 14:39:00.372"/>
</kw>
<status status="PASS" starttime="20220714 14:38:59.371" endtime="20220714 14:39:00.372"/>
</branch>
<branch type="ELSE">
<kw name="Get File" library="OperatingSystem">
<var>${new_body}</var>
<arg>${BODY_EMPTY}</arg>
<doc>Returns the contents of a specified file.</doc>
<status status="NOT RUN" starttime="20220714 14:39:00.373" endtime="20220714 14:39:00.373"/>
</kw>
<kw name="POST" library="RequestsLibrary">
<var>${response}</var>
<arg>${URL_BASE.base}${URL_API.pet}</arg>
<arg>data=${new_body}</arg>
<arg>headers=&amp;{headers}</arg>
<arg>expected_status=any</arg>
<doc>Sends a POST request.</doc>
<status status="NOT RUN" starttime="20220714 14:39:00.374" endtime="20220714 14:39:00.374"/>
</kw>
<status status="NOT RUN" starttime="20220714 14:39:00.372" endtime="20220714 14:39:00.374"/>
</branch>
<status status="PASS" starttime="20220714 14:38:59.371" endtime="20220714 14:39:00.374"/>
</if>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220714 14:39:00.375" level="TRACE">Arguments: [ '${response}' ]</msg>
<msg timestamp="20220714 14:39:00.376" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<msg timestamp="20220714 14:39:00.377" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20220714 14:39:00.375" endtime="20220714 14:39:00.377"/>
</kw>
<msg timestamp="20220714 14:39:00.377" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20220714 14:38:59.367" endtime="20220714 14:39:00.377"/>
</kw>
<kw name="Then expected status code &quot;200&quot;" library="kws_shared" sourcename="Then expected status code &quot;${expected}&quot;">
<doc>Keyword responsible for validating the status code upon test requirement.</doc>
<msg timestamp="20220714 14:39:00.380" level="TRACE">Arguments: [ ${expected}='200' ]</msg>
<kw name="Status Should Be" library="RequestsLibrary">
<arg>${expected}</arg>
<doc>Fails if response status code is different than the expected.</doc>
<msg timestamp="20220714 14:39:00.382" level="TRACE">Arguments: [ '200' ]</msg>
<msg timestamp="20220714 14:39:00.382" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20220714 14:39:00.381" endtime="20220714 14:39:00.383"/>
</kw>
<msg timestamp="20220714 14:39:00.383" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20220714 14:39:00.379" endtime="20220714 14:39:00.383"/>
</kw>
<kw name="And the contract of the request &quot;pet registered successfully&quot;" library="kws_shared" sourcename="And the contract of the request &quot;${schema}&quot;">
<doc>Keyword responsible for getting the schema model received by parameter by gherkin and validating it with the api response.</doc>
<msg timestamp="20220714 14:39:00.386" level="TRACE">Arguments: [ ${schema}='pet registered successfully' ]</msg>
<kw name="Get Schema Json" library="helper">
<var>${arg_schema}</var>
<arg>${schema}</arg>
<doc>Keyword responsável por pegar o arquivo "schemas.json"
Converte para json e retorna o arquivo formatado.</doc>
<msg timestamp="20220714 14:39:00.389" level="TRACE">Arguments: [ ${text}='pet registered successfully' ]</msg>
<kw name="Get File" library="OperatingSystem">
<var>${file}</var>
<arg>${ROOT}/resource/data/schemas/schemas.json</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20220714 14:39:00.389" level="TRACE">Arguments: [ 'C:\\Users\\super\\workspace\\Projeto\\automacao_pet/resource/data/schemas/schemas.json' ]</msg>
<msg timestamp="20220714 14:39:00.390" level="INFO" html="true">Getting file '&lt;a href="file://C:\Users\super\workspace\Projeto\automacao_pet\resource\data\schemas\schemas.json"&gt;C:\Users\super\workspace\Projeto\automacao_pet\resource\data\schemas\schemas.json&lt;/a&gt;'.</msg>
<msg timestamp="20220714 14:39:00.391" level="TRACE">Return: '{\n    "petId successfully": "api_pet/get_petid.json",\n    "pet registered successfully": "api_pet/post_pet.json",\n    "orderId successfully": "api_store/get_store_orderid.json",\n    "order registered successfully": "api_store/post_store.json",\n    "pet changed successfully": "api_pet/put_pet.json"\n}'</msg>
<msg timestamp="20220714 14:39:00.391" level="INFO">${file} = {
    "petId successfully": "api_pet/get_petid.json",
    "pet registered successfully": "api_pet/post_pet.json",
    "orderId successfully": "api_store/get_store_orderid.json",
    "order registered ...</msg>
<status status="PASS" starttime="20220714 14:39:00.389" endtime="20220714 14:39:00.391"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${json}</var>
<arg>json.loads($file)</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20220714 14:39:00.393" level="TRACE">Arguments: [ 'json.loads($file)' | 'json' ]</msg>
<msg timestamp="20220714 14:39:00.393" level="TRACE">Return: {'order registered successfully': 'api_store/post_store.json',
 'orderId successfully': 'api_store/get_store_orderid.json',
 'pet changed successfully': 'api_pet/put_pet.json',
 'pet registered successfully': 'api_pet/post_pet.json',
 'petId successfully': 'api_pet/get_petid.json'}</msg>
<msg timestamp="20220714 14:39:00.394" level="INFO">${json} = {'petId successfully': 'api_pet/get_petid.json', 'pet registered successfully': 'api_pet/post_pet.json', 'orderId successfully': 'api_store/get_store_orderid.json', 'order registered successfully': 'a...</msg>
<status status="PASS" starttime="20220714 14:39:00.392" endtime="20220714 14:39:00.394"/>
</kw>
<kw name="Get From Dictionary" library="Collections">
<var>${json_schemas}</var>
<arg>${json}</arg>
<arg>${text}</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<msg timestamp="20220714 14:39:00.396" level="TRACE">Arguments: [ {'order registered successfully': 'api_store/post_store.json',
 'orderId successfully': 'api_store/get_store_orderid.json',
 'pet changed successfully': 'api_pet/put_pet.json',
 'pet registered successfully': 'api_pet/post_pet.json',
 'petId successfully': 'api_pet/get_petid.json'} | 'pet registered successfully' ]</msg>
<msg timestamp="20220714 14:39:00.396" level="TRACE">Return: 'api_pet/post_pet.json'</msg>
<msg timestamp="20220714 14:39:00.397" level="INFO">${json_schemas} = api_pet/post_pet.json</msg>
<status status="PASS" starttime="20220714 14:39:00.395" endtime="20220714 14:39:00.397"/>
</kw>
<msg timestamp="20220714 14:39:00.398" level="TRACE">Return: 'api_pet/post_pet.json'</msg>
<msg timestamp="20220714 14:39:00.398" level="INFO">${arg_schema} = api_pet/post_pet.json</msg>
<status status="PASS" starttime="20220714 14:39:00.387" endtime="20220714 14:39:00.398"/>
</kw>
<kw name="Validate Jsonschema From File" library="JsonValidator">
<arg>${response.text}</arg>
<arg>${ROOT}/resource/data/schemas/${arg_schema}</arg>
<doc>Validate JSON according to schema, loaded from a file.</doc>
<msg timestamp="20220714 14:39:00.402" level="TRACE">Arguments: [ '{"id":1,"category":{"id":0,"name":"string"},"name":"doggie","photoUrls":["string"],"tags":[{"id":0,"name":"string"}],"status":"available"}' | 'C:\\Users\\super\\workspace\\Projeto\\automacao_pet/resource/data/schemas/api_pet/post_pet.json' ]</msg>
<msg timestamp="20220714 14:39:00.427" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20220714 14:39:00.398" endtime="20220714 14:39:00.427"/>
</kw>
<msg timestamp="20220714 14:39:00.428" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20220714 14:39:00.385" endtime="20220714 14:39:00.428"/>
</kw>
<doc>Test responsible for making the user able to register a new animal by sending a valid body.</doc>
<tag>API_pet</tag>
<tag>EP_pet</tag>
<tag>TC04</tag>
<status status="PASS" starttime="20220714 14:38:59.363" endtime="20220714 14:39:00.430"/>
</test>
<test id="s1-s1-s2-t2" name="TC05: Unable to insert animal without sending the body">
<kw name="Given perform a POST request &quot;post/pet&quot; endpoint sending body &quot;&quot;" library="POST_PET" sourcename="Given perform a POST request &quot;post/pet&quot; endpoint sending body &quot;${body}&quot;">
<msg timestamp="20220714 14:39:00.439" level="TRACE">Arguments: [ ${body}='' ]</msg>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{headers}</var>
<arg>Content-Type=application/json</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220714 14:39:00.441" level="TRACE">Arguments: [ 'Content-Type=application/json' ]</msg>
<msg timestamp="20220714 14:39:00.441" level="TRACE">Return: {'Content-Type': 'application/json'}</msg>
<msg timestamp="20220714 14:39:00.442" level="INFO">&amp;{headers} = { Content-Type=application/json }</msg>
<status status="PASS" starttime="20220714 14:39:00.440" endtime="20220714 14:39:00.442"/>
</kw>
<if>
<branch type="IF" condition="&quot;${body}&quot; == &quot;valid&quot;">
<kw name="Get File" library="OperatingSystem">
<var>${body}</var>
<arg>${BODY_POST_PET}</arg>
<doc>Returns the contents of a specified file.</doc>
<status status="NOT RUN" starttime="20220714 14:39:00.443" endtime="20220714 14:39:00.443"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${new_body}</var>
<arg>json.loads($body)</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="NOT RUN" starttime="20220714 14:39:00.444" endtime="20220714 14:39:00.444"/>
</kw>
<kw name="POST" library="RequestsLibrary">
<var>${response}</var>
<arg>${URL_BASE.base}${URL_API.pet}</arg>
<arg>json=${new_body}</arg>
<arg>headers=&amp;{headers}</arg>
<arg>expected_status=any</arg>
<doc>Sends a POST request.</doc>
<status status="NOT RUN" starttime="20220714 14:39:00.444" endtime="20220714 14:39:00.444"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${response.json()["id"]}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20220714 14:39:00.445" endtime="20220714 14:39:00.445"/>
</kw>
<kw name="Get From Dictionary" library="Collections">
<var>${ID}</var>
<arg>${response.json()}</arg>
<arg>id</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<status status="NOT RUN" starttime="20220714 14:39:00.445" endtime="20220714 14:39:00.445"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${ID}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" starttime="20220714 14:39:00.446" endtime="20220714 14:39:00.446"/>
</kw>
<status status="NOT RUN" starttime="20220714 14:39:00.442" endtime="20220714 14:39:00.446"/>
</branch>
<branch type="ELSE">
<kw name="Get File" library="OperatingSystem">
<var>${new_body}</var>
<arg>${BODY_EMPTY}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20220714 14:39:00.448" level="TRACE">Arguments: [ 'C:\\Users\\super\\workspace\\Projeto\\automacao_pet/resource/data/input/body_empty.json' ]</msg>
<msg timestamp="20220714 14:39:00.448" level="INFO" html="true">Getting file '&lt;a href="file://C:\Users\super\workspace\Projeto\automacao_pet\resource\data\input\body_empty.json"&gt;C:\Users\super\workspace\Projeto\automacao_pet\resource\data\input\body_empty.json&lt;/a&gt;'.</msg>
<msg timestamp="20220714 14:39:00.450" level="TRACE">Return: ''</msg>
<msg timestamp="20220714 14:39:00.450" level="INFO">${new_body} = </msg>
<status status="PASS" starttime="20220714 14:39:00.447" endtime="20220714 14:39:00.451"/>
</kw>
<kw name="POST" library="RequestsLibrary">
<var>${response}</var>
<arg>${URL_BASE.base}${URL_API.pet}</arg>
<arg>data=${new_body}</arg>
<arg>headers=&amp;{headers}</arg>
<arg>expected_status=any</arg>
<doc>Sends a POST request.</doc>
<msg timestamp="20220714 14:39:00.457" level="TRACE">Arguments: [ 'https://petstore.swagger.io/v2/pet' | data='' | headers={'Content-Type': 'application/json'} | expected_status='any' ]</msg>
<msg timestamp="20220714 14:39:00.463" level="DEBUG">Starting new HTTPS connection (1): petstore.swagger.io:443</msg>
<msg timestamp="20220714 14:39:01.267" level="DEBUG">https://petstore.swagger.io:443 "POST /v2/pet HTTP/1.1" 405 None</msg>
<msg timestamp="20220714 14:39:01.275" level="INFO">POST Request : url=https://petstore.swagger.io/v2/pet 
 path_url=/v2/pet 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '0'} 
 body=None 
 </msg>
<msg timestamp="20220714 14:39:01.276" level="INFO">POST Response : url=https://petstore.swagger.io/v2/pet 
 status=405, reason=Method Not Allowed 
 headers={'Date': 'Thu, 14 Jul 2022 17:39:01 GMT', 'Content-Type': 'application/json', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Access-Control-Allow-Origin': '*', 'Access-Control-Allow-Methods': 'GET, POST, DELETE, PUT', 'Access-Control-Allow-Headers': 'Content-Type, api_key, Authorization', 'Server': 'Jetty(9.2.9.v20150224)'} 
 body={"code":405,"type":"unknown","message":"no data"} 
 </msg>
<msg timestamp="20220714 14:39:01.276" level="TRACE">Return: &lt;Response [405]&gt;</msg>
<msg timestamp="20220714 14:39:01.277" level="INFO">${response} = &lt;Response [405]&gt;</msg>
<status status="PASS" starttime="20220714 14:39:00.452" endtime="20220714 14:39:01.277"/>
</kw>
<status status="PASS" starttime="20220714 14:39:00.446" endtime="20220714 14:39:01.277"/>
</branch>
<status status="PASS" starttime="20220714 14:39:00.442" endtime="20220714 14:39:01.277"/>
</if>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220714 14:39:01.278" level="TRACE">Arguments: [ '${response}' ]</msg>
<msg timestamp="20220714 14:39:01.280" level="INFO">${response} = &lt;Response [405]&gt;</msg>
<msg timestamp="20220714 14:39:01.280" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20220714 14:39:01.278" endtime="20220714 14:39:01.280"/>
</kw>
<msg timestamp="20220714 14:39:01.280" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20220714 14:39:00.439" endtime="20220714 14:39:01.280"/>
</kw>
<kw name="Then expected status code &quot;405&quot;" library="kws_shared" sourcename="Then expected status code &quot;${expected}&quot;">
<doc>Keyword responsible for validating the status code upon test requirement.</doc>
<msg timestamp="20220714 14:39:01.283" level="TRACE">Arguments: [ ${expected}='405' ]</msg>
<kw name="Status Should Be" library="RequestsLibrary">
<arg>${expected}</arg>
<doc>Fails if response status code is different than the expected.</doc>
<msg timestamp="20220714 14:39:01.284" level="TRACE">Arguments: [ '405' ]</msg>
<msg timestamp="20220714 14:39:01.285" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20220714 14:39:01.283" endtime="20220714 14:39:01.285"/>
</kw>
<msg timestamp="20220714 14:39:01.285" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20220714 14:39:01.281" endtime="20220714 14:39:01.286"/>
</kw>
<kw name="And the request must contain the return message &quot;no data&quot;" library="kws_shared" sourcename="And the request must contain the return message &quot;${message}&quot;">
<msg timestamp="20220714 14:39:01.288" level="TRACE">Arguments: [ ${message}='no data' ]</msg>
<kw name="Should Contain" library="BuiltIn">
<arg>${response.text}</arg>
<arg>"${message}"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<msg timestamp="20220714 14:39:01.292" level="TRACE">Arguments: [ '{"code":405,"type":"unknown","message":"no data"}' | '"no data"' ]</msg>
<msg timestamp="20220714 14:39:01.292" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20220714 14:39:01.289" endtime="20220714 14:39:01.293"/>
</kw>
<msg timestamp="20220714 14:39:01.293" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20220714 14:39:01.287" endtime="20220714 14:39:01.293"/>
</kw>
<doc>Test responsible for validating that the user cannot register a new animal when he stops sending the body.</doc>
<tag>API_pet</tag>
<tag>EP_pet</tag>
<tag>TC05</tag>
<status status="PASS" starttime="20220714 14:39:00.436" endtime="20220714 14:39:01.296"/>
</test>
<status status="PASS" starttime="20220714 14:38:59.277" endtime="20220714 14:39:01.302"/>
</suite>
<suite id="s1-s1-s3" name="PUT PET" source="C:\Users\super\workspace\Projeto\automacao_pet\tests\api_pet\PUT_PET.robot">
<test id="s1-s1-s3-t1" name="TC12: Update the ID and name attributes of an existent pet">
<kw name="Given perform a PUT request &quot;put/pet&quot; endpoint sending body &quot;valid&quot;" library="PUT_PET" sourcename="Given perform a PUT request &quot;put/pet&quot; endpoint sending body &quot;${body}&quot;">
<msg timestamp="20220714 14:39:01.408" level="TRACE">Arguments: [ ${body}='valid' ]</msg>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{headers}</var>
<arg>Content-Type=application/json</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220714 14:39:01.409" level="TRACE">Arguments: [ 'Content-Type=application/json' ]</msg>
<msg timestamp="20220714 14:39:01.410" level="TRACE">Return: {'Content-Type': 'application/json'}</msg>
<msg timestamp="20220714 14:39:01.410" level="INFO">&amp;{headers} = { Content-Type=application/json }</msg>
<status status="PASS" starttime="20220714 14:39:01.409" endtime="20220714 14:39:01.410"/>
</kw>
<if>
<branch type="IF" condition="&quot;${body}&quot; == &quot;valid&quot;">
<kw name="Get File" library="OperatingSystem">
<var>${body}</var>
<arg>${BODY_PUT}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20220714 14:39:01.412" level="TRACE">Arguments: [ 'C:\\Users\\super\\workspace\\Projeto\\automacao_pet/resource/data/input/PUT_PET.json' ]</msg>
<msg timestamp="20220714 14:39:01.413" level="INFO" html="true">Getting file '&lt;a href="file://C:\Users\super\workspace\Projeto\automacao_pet\resource\data\input\PUT_PET.json"&gt;C:\Users\super\workspace\Projeto\automacao_pet\resource\data\input\PUT_PET.json&lt;/a&gt;'.</msg>
<msg timestamp="20220714 14:39:01.414" level="TRACE">Return: '{\n    "id": 5,\n    "category": {\n      "id": 0,\n      "name": "string"\n    },\n    "name": "emma",\n    "photoUrls": [\n      "string"\n    ],\n    "tags": [\n      {\n        "id": 0,\n        "name": "string"\n      }\n    ],\n    "status": "available"\n  }'</msg>
<msg timestamp="20220714 14:39:01.415" level="INFO">${body} = {
    "id": 5,
    "category": {
      "id": 0,
      "name": "string"
    },
    "name": "emma",
    "photoUrls": [
      "string"
    ],
    "tags": [
      {
        "id": 0,
        "name": "strin...</msg>
<status status="PASS" starttime="20220714 14:39:01.412" endtime="20220714 14:39:01.415"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${new_body}</var>
<arg>json.loads($body)</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20220714 14:39:01.416" level="TRACE">Arguments: [ 'json.loads($body)' | 'json' ]</msg>
<msg timestamp="20220714 14:39:01.417" level="TRACE">Return: {'category': {'id': 0, 'name': 'string'},
 'id': 5,
 'name': 'emma',
 'photoUrls': ['string'],
 'status': 'available',
 'tags': [{'id': 0, 'name': 'string'}]}</msg>
<msg timestamp="20220714 14:39:01.418" level="INFO">${new_body} = {'id': 5, 'category': {'id': 0, 'name': 'string'}, 'name': 'emma', 'photoUrls': ['string'], 'tags': [{'id': 0, 'name': 'string'}], 'status': 'available'}</msg>
<status status="PASS" starttime="20220714 14:39:01.415" endtime="20220714 14:39:01.418"/>
</kw>
<kw name="PUT" library="RequestsLibrary">
<var>${response}</var>
<arg>${URL_BASE.base}${URL_API.pet}</arg>
<arg>json=${new_body}</arg>
<arg>headers=&amp;{headers}</arg>
<arg>expected_status=any</arg>
<doc>Sends a PUT request.</doc>
<msg timestamp="20220714 14:39:01.424" level="TRACE">Arguments: [ 'https://petstore.swagger.io/v2/pet' | json={'category': {'id': 0, 'name': 'string'},
 'id': 5,
 'name': 'emma',
 'photoUrls': ['string'],
 'status': 'available',
 'tags': [{'id': 0, 'name': 'string'}]} | headers={'Content-Type': 'application/json'} | expected_status='any' ]</msg>
<msg timestamp="20220714 14:39:01.432" level="DEBUG">Starting new HTTPS connection (1): petstore.swagger.io:443</msg>
<msg timestamp="20220714 14:39:02.236" level="DEBUG">https://petstore.swagger.io:443 "PUT /v2/pet HTTP/1.1" 200 None</msg>
<msg timestamp="20220714 14:39:02.243" level="INFO">PUT Request : url=https://petstore.swagger.io/v2/pet 
 path_url=/v2/pet 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '153'} 
 body=b'{"id": 5, "category": {"id": 0, "name": "string"}, "name": "emma", "photoUrls": ["string"], "tags": [{"id": 0, "name": "string"}], "status": "available"}' 
 </msg>
<msg timestamp="20220714 14:39:02.244" level="INFO">PUT Response : url=https://petstore.swagger.io/v2/pet 
 status=200, reason=OK 
 headers={'Date': 'Thu, 14 Jul 2022 17:39:02 GMT', 'Content-Type': 'application/json', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Access-Control-Allow-Origin': '*', 'Access-Control-Allow-Methods': 'GET, POST, DELETE, PUT', 'Access-Control-Allow-Headers': 'Content-Type, api_key, Authorization', 'Server': 'Jetty(9.2.9.v20150224)'} 
 body={"id":5,"category":{"id":0,"name":"string"},"name":"emma","photoUrls":["string"],"tags":[{"id":0,"name":"string"}],"status":"available"} 
 </msg>
<msg timestamp="20220714 14:39:02.244" level="TRACE">Return: &lt;Response [200]&gt;</msg>
<msg timestamp="20220714 14:39:02.244" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220714 14:39:01.418" endtime="20220714 14:39:02.244"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${response.json()["id"]}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220714 14:39:02.247" level="TRACE">Arguments: [ 5 ]</msg>
<msg timestamp="20220714 14:39:02.248" level="INFO">5</msg>
<msg timestamp="20220714 14:39:02.248" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20220714 14:39:02.245" endtime="20220714 14:39:02.248"/>
</kw>
<kw name="Get From Dictionary" library="Collections">
<var>${ID}</var>
<arg>${response.json()}</arg>
<arg>id</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<msg timestamp="20220714 14:39:02.251" level="TRACE">Arguments: [ {'category': {'id': 0, 'name': 'string'},
 'id': 5,
 'name': 'emma',
 'photoUrls': ['string'],
 'status': 'available',
 'tags': [{'id': 0, 'name': 'string'}]} | 'id' ]</msg>
<msg timestamp="20220714 14:39:02.253" level="TRACE">Return: 5</msg>
<msg timestamp="20220714 14:39:02.253" level="INFO">${ID} = 5</msg>
<status status="PASS" starttime="20220714 14:39:02.249" endtime="20220714 14:39:02.253"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${ID}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220714 14:39:02.254" level="TRACE">Arguments: [ '${ID}' ]</msg>
<msg timestamp="20220714 14:39:02.255" level="INFO">${ID} = 5</msg>
<msg timestamp="20220714 14:39:02.255" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20220714 14:39:02.253" endtime="20220714 14:39:02.255"/>
</kw>
<status status="PASS" starttime="20220714 14:39:01.411" endtime="20220714 14:39:02.255"/>
</branch>
<branch type="ELSE">
<kw name="Get File" library="OperatingSystem">
<var>${new_body}</var>
<arg>${BODY_EMPTY}</arg>
<doc>Returns the contents of a specified file.</doc>
<status status="NOT RUN" starttime="20220714 14:39:02.256" endtime="20220714 14:39:02.256"/>
</kw>
<kw name="PUT" library="RequestsLibrary">
<var>${response}</var>
<arg>${URL_BASE.base}${URL_API.pet}</arg>
<arg>data=${new_body}</arg>
<arg>headers=&amp;{headers}</arg>
<arg>expected_status=any</arg>
<doc>Sends a PUT request.</doc>
<status status="NOT RUN" starttime="20220714 14:39:02.257" endtime="20220714 14:39:02.257"/>
</kw>
<status status="NOT RUN" starttime="20220714 14:39:02.255" endtime="20220714 14:39:02.257"/>
</branch>
<status status="PASS" starttime="20220714 14:39:01.411" endtime="20220714 14:39:02.257"/>
</if>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220714 14:39:02.258" level="TRACE">Arguments: [ '${response}' ]</msg>
<msg timestamp="20220714 14:39:02.259" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<msg timestamp="20220714 14:39:02.260" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20220714 14:39:02.258" endtime="20220714 14:39:02.260"/>
</kw>
<msg timestamp="20220714 14:39:02.260" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20220714 14:39:01.407" endtime="20220714 14:39:02.260"/>
</kw>
<kw name="Then expected status code &quot;200&quot;" library="kws_shared" sourcename="Then expected status code &quot;${expected}&quot;">
<doc>Keyword responsible for validating the status code upon test requirement.</doc>
<msg timestamp="20220714 14:39:02.264" level="TRACE">Arguments: [ ${expected}='200' ]</msg>
<kw name="Status Should Be" library="RequestsLibrary">
<arg>${expected}</arg>
<doc>Fails if response status code is different than the expected.</doc>
<msg timestamp="20220714 14:39:02.265" level="TRACE">Arguments: [ '200' ]</msg>
<msg timestamp="20220714 14:39:02.266" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20220714 14:39:02.264" endtime="20220714 14:39:02.266"/>
</kw>
<msg timestamp="20220714 14:39:02.266" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20220714 14:39:02.263" endtime="20220714 14:39:02.266"/>
</kw>
<kw name="And the contract of the request &quot;pet changed successfully&quot;" library="kws_shared" sourcename="And the contract of the request &quot;${schema}&quot;">
<doc>Keyword responsible for getting the schema model received by parameter by gherkin and validating it with the api response.</doc>
<msg timestamp="20220714 14:39:02.269" level="TRACE">Arguments: [ ${schema}='pet changed successfully' ]</msg>
<kw name="Get Schema Json" library="helper">
<var>${arg_schema}</var>
<arg>${schema}</arg>
<doc>Keyword responsável por pegar o arquivo "schemas.json"
Converte para json e retorna o arquivo formatado.</doc>
<msg timestamp="20220714 14:39:02.271" level="TRACE">Arguments: [ ${text}='pet changed successfully' ]</msg>
<kw name="Get File" library="OperatingSystem">
<var>${file}</var>
<arg>${ROOT}/resource/data/schemas/schemas.json</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20220714 14:39:02.273" level="TRACE">Arguments: [ 'C:\\Users\\super\\workspace\\Projeto\\automacao_pet/resource/data/schemas/schemas.json' ]</msg>
<msg timestamp="20220714 14:39:02.274" level="INFO" html="true">Getting file '&lt;a href="file://C:\Users\super\workspace\Projeto\automacao_pet\resource\data\schemas\schemas.json"&gt;C:\Users\super\workspace\Projeto\automacao_pet\resource\data\schemas\schemas.json&lt;/a&gt;'.</msg>
<msg timestamp="20220714 14:39:02.274" level="TRACE">Return: '{\n    "petId successfully": "api_pet/get_petid.json",\n    "pet registered successfully": "api_pet/post_pet.json",\n    "orderId successfully": "api_store/get_store_orderid.json",\n    "order registered successfully": "api_store/post_store.json",\n    "pet changed successfully": "api_pet/put_pet.json"\n}'</msg>
<msg timestamp="20220714 14:39:02.275" level="INFO">${file} = {
    "petId successfully": "api_pet/get_petid.json",
    "pet registered successfully": "api_pet/post_pet.json",
    "orderId successfully": "api_store/get_store_orderid.json",
    "order registered ...</msg>
<status status="PASS" starttime="20220714 14:39:02.272" endtime="20220714 14:39:02.275"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${json}</var>
<arg>json.loads($file)</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20220714 14:39:02.276" level="TRACE">Arguments: [ 'json.loads($file)' | 'json' ]</msg>
<msg timestamp="20220714 14:39:02.277" level="TRACE">Return: {'order registered successfully': 'api_store/post_store.json',
 'orderId successfully': 'api_store/get_store_orderid.json',
 'pet changed successfully': 'api_pet/put_pet.json',
 'pet registered successfully': 'api_pet/post_pet.json',
 'petId successfully': 'api_pet/get_petid.json'}</msg>
<msg timestamp="20220714 14:39:02.278" level="INFO">${json} = {'petId successfully': 'api_pet/get_petid.json', 'pet registered successfully': 'api_pet/post_pet.json', 'orderId successfully': 'api_store/get_store_orderid.json', 'order registered successfully': 'a...</msg>
<status status="PASS" starttime="20220714 14:39:02.276" endtime="20220714 14:39:02.278"/>
</kw>
<kw name="Get From Dictionary" library="Collections">
<var>${json_schemas}</var>
<arg>${json}</arg>
<arg>${text}</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<msg timestamp="20220714 14:39:02.279" level="TRACE">Arguments: [ {'order registered successfully': 'api_store/post_store.json',
 'orderId successfully': 'api_store/get_store_orderid.json',
 'pet changed successfully': 'api_pet/put_pet.json',
 'pet registered successfully': 'api_pet/post_pet.json',
 'petId successfully': 'api_pet/get_petid.json'} | 'pet changed successfully' ]</msg>
<msg timestamp="20220714 14:39:02.281" level="TRACE">Return: 'api_pet/put_pet.json'</msg>
<msg timestamp="20220714 14:39:02.281" level="INFO">${json_schemas} = api_pet/put_pet.json</msg>
<status status="PASS" starttime="20220714 14:39:02.278" endtime="20220714 14:39:02.281"/>
</kw>
<msg timestamp="20220714 14:39:02.281" level="TRACE">Return: 'api_pet/put_pet.json'</msg>
<msg timestamp="20220714 14:39:02.281" level="INFO">${arg_schema} = api_pet/put_pet.json</msg>
<status status="PASS" starttime="20220714 14:39:02.270" endtime="20220714 14:39:02.282"/>
</kw>
<kw name="Validate Jsonschema From File" library="JsonValidator">
<arg>${response.text}</arg>
<arg>${ROOT}/resource/data/schemas/${arg_schema}</arg>
<doc>Validate JSON according to schema, loaded from a file.</doc>
<msg timestamp="20220714 14:39:02.285" level="TRACE">Arguments: [ '{"id":5,"category":{"id":0,"name":"string"},"name":"emma","photoUrls":["string"],"tags":[{"id":0,"name":"string"}],"status":"available"}' | 'C:\\Users\\super\\workspace\\Projeto\\automacao_pet/resource/data/schemas/api_pet/put_pet.json' ]</msg>
<msg timestamp="20220714 14:39:02.324" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20220714 14:39:02.282" endtime="20220714 14:39:02.325"/>
</kw>
<msg timestamp="20220714 14:39:02.325" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20220714 14:39:02.268" endtime="20220714 14:39:02.325"/>
</kw>
<doc>Test responsible for update an existing pet successfully by sending a valid body.</doc>
<tag>API_pet</tag>
<tag>EP_put</tag>
<tag>TC12</tag>
<status status="PASS" starttime="20220714 14:39:01.404" endtime="20220714 14:39:02.327"/>
</test>
<test id="s1-s1-s3-t2" name="TC13: Unable to update an existing pet without sending the body">
<kw name="Given perform a PUT request &quot;put/pet&quot; endpoint sending body &quot;&quot;" library="PUT_PET" sourcename="Given perform a PUT request &quot;put/pet&quot; endpoint sending body &quot;${body}&quot;">
<msg timestamp="20220714 14:39:02.340" level="TRACE">Arguments: [ ${body}='' ]</msg>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{headers}</var>
<arg>Content-Type=application/json</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220714 14:39:02.342" level="TRACE">Arguments: [ 'Content-Type=application/json' ]</msg>
<msg timestamp="20220714 14:39:02.342" level="TRACE">Return: {'Content-Type': 'application/json'}</msg>
<msg timestamp="20220714 14:39:02.343" level="INFO">&amp;{headers} = { Content-Type=application/json }</msg>
<status status="PASS" starttime="20220714 14:39:02.341" endtime="20220714 14:39:02.343"/>
</kw>
<if>
<branch type="IF" condition="&quot;${body}&quot; == &quot;valid&quot;">
<kw name="Get File" library="OperatingSystem">
<var>${body}</var>
<arg>${BODY_PUT}</arg>
<doc>Returns the contents of a specified file.</doc>
<status status="NOT RUN" starttime="20220714 14:39:02.344" endtime="20220714 14:39:02.344"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${new_body}</var>
<arg>json.loads($body)</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="NOT RUN" starttime="20220714 14:39:02.345" endtime="20220714 14:39:02.346"/>
</kw>
<kw name="PUT" library="RequestsLibrary">
<var>${response}</var>
<arg>${URL_BASE.base}${URL_API.pet}</arg>
<arg>json=${new_body}</arg>
<arg>headers=&amp;{headers}</arg>
<arg>expected_status=any</arg>
<doc>Sends a PUT request.</doc>
<status status="NOT RUN" starttime="20220714 14:39:02.346" endtime="20220714 14:39:02.347"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${response.json()["id"]}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20220714 14:39:02.347" endtime="20220714 14:39:02.348"/>
</kw>
<kw name="Get From Dictionary" library="Collections">
<var>${ID}</var>
<arg>${response.json()}</arg>
<arg>id</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<status status="NOT RUN" starttime="20220714 14:39:02.349" endtime="20220714 14:39:02.349"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${ID}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" starttime="20220714 14:39:02.350" endtime="20220714 14:39:02.350"/>
</kw>
<status status="NOT RUN" starttime="20220714 14:39:02.344" endtime="20220714 14:39:02.351"/>
</branch>
<branch type="ELSE">
<kw name="Get File" library="OperatingSystem">
<var>${new_body}</var>
<arg>${BODY_EMPTY}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20220714 14:39:02.353" level="TRACE">Arguments: [ 'C:\\Users\\super\\workspace\\Projeto\\automacao_pet/resource/data/input/body_empty.json' ]</msg>
<msg timestamp="20220714 14:39:02.354" level="INFO" html="true">Getting file '&lt;a href="file://C:\Users\super\workspace\Projeto\automacao_pet\resource\data\input\body_empty.json"&gt;C:\Users\super\workspace\Projeto\automacao_pet\resource\data\input\body_empty.json&lt;/a&gt;'.</msg>
<msg timestamp="20220714 14:39:02.355" level="TRACE">Return: ''</msg>
<msg timestamp="20220714 14:39:02.355" level="INFO">${new_body} = </msg>
<status status="PASS" starttime="20220714 14:39:02.352" endtime="20220714 14:39:02.355"/>
</kw>
<kw name="PUT" library="RequestsLibrary">
<var>${response}</var>
<arg>${URL_BASE.base}${URL_API.pet}</arg>
<arg>data=${new_body}</arg>
<arg>headers=&amp;{headers}</arg>
<arg>expected_status=any</arg>
<doc>Sends a PUT request.</doc>
<msg timestamp="20220714 14:39:02.363" level="TRACE">Arguments: [ 'https://petstore.swagger.io/v2/pet' | data='' | headers={'Content-Type': 'application/json'} | expected_status='any' ]</msg>
<msg timestamp="20220714 14:39:02.370" level="DEBUG">Starting new HTTPS connection (1): petstore.swagger.io:443</msg>
<msg timestamp="20220714 14:39:03.201" level="DEBUG">https://petstore.swagger.io:443 "PUT /v2/pet HTTP/1.1" 405 None</msg>
<msg timestamp="20220714 14:39:03.206" level="INFO">PUT Request : url=https://petstore.swagger.io/v2/pet 
 path_url=/v2/pet 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '0'} 
 body=None 
 </msg>
<msg timestamp="20220714 14:39:03.207" level="INFO">PUT Response : url=https://petstore.swagger.io/v2/pet 
 status=405, reason=Method Not Allowed 
 headers={'Date': 'Thu, 14 Jul 2022 17:39:03 GMT', 'Content-Type': 'application/json', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Access-Control-Allow-Origin': '*', 'Access-Control-Allow-Methods': 'GET, POST, DELETE, PUT', 'Access-Control-Allow-Headers': 'Content-Type, api_key, Authorization', 'Server': 'Jetty(9.2.9.v20150224)'} 
 body={"code":405,"type":"unknown","message":"no data"} 
 </msg>
<msg timestamp="20220714 14:39:03.207" level="TRACE">Return: &lt;Response [405]&gt;</msg>
<msg timestamp="20220714 14:39:03.208" level="INFO">${response} = &lt;Response [405]&gt;</msg>
<status status="PASS" starttime="20220714 14:39:02.356" endtime="20220714 14:39:03.208"/>
</kw>
<status status="PASS" starttime="20220714 14:39:02.351" endtime="20220714 14:39:03.208"/>
</branch>
<status status="PASS" starttime="20220714 14:39:02.343" endtime="20220714 14:39:03.208"/>
</if>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220714 14:39:03.209" level="TRACE">Arguments: [ '${response}' ]</msg>
<msg timestamp="20220714 14:39:03.210" level="INFO">${response} = &lt;Response [405]&gt;</msg>
<msg timestamp="20220714 14:39:03.210" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20220714 14:39:03.209" endtime="20220714 14:39:03.210"/>
</kw>
<msg timestamp="20220714 14:39:03.211" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20220714 14:39:02.339" endtime="20220714 14:39:03.211"/>
</kw>
<kw name="Then expected status code &quot;405&quot;" library="kws_shared" sourcename="Then expected status code &quot;${expected}&quot;">
<doc>Keyword responsible for validating the status code upon test requirement.</doc>
<msg timestamp="20220714 14:39:03.215" level="TRACE">Arguments: [ ${expected}='405' ]</msg>
<kw name="Status Should Be" library="RequestsLibrary">
<arg>${expected}</arg>
<doc>Fails if response status code is different than the expected.</doc>
<msg timestamp="20220714 14:39:03.216" level="TRACE">Arguments: [ '405' ]</msg>
<msg timestamp="20220714 14:39:03.216" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20220714 14:39:03.215" endtime="20220714 14:39:03.216"/>
</kw>
<msg timestamp="20220714 14:39:03.217" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20220714 14:39:03.213" endtime="20220714 14:39:03.217"/>
</kw>
<kw name="And the request must contain the return message &quot;no data&quot;" library="kws_shared" sourcename="And the request must contain the return message &quot;${message}&quot;">
<msg timestamp="20220714 14:39:03.220" level="TRACE">Arguments: [ ${message}='no data' ]</msg>
<kw name="Should Contain" library="BuiltIn">
<arg>${response.text}</arg>
<arg>"${message}"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<msg timestamp="20220714 14:39:03.224" level="TRACE">Arguments: [ '{"code":405,"type":"unknown","message":"no data"}' | '"no data"' ]</msg>
<msg timestamp="20220714 14:39:03.224" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20220714 14:39:03.221" endtime="20220714 14:39:03.224"/>
</kw>
<msg timestamp="20220714 14:39:03.225" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20220714 14:39:03.219" endtime="20220714 14:39:03.225"/>
</kw>
<doc>Test responsible for validating that the user cannot update an existing pet when he stops sending the body.</doc>
<tag>API_pet</tag>
<tag>EP_put</tag>
<tag>TC13</tag>
<status status="PASS" starttime="20220714 14:39:02.334" endtime="20220714 14:39:03.227"/>
</test>
<status status="PASS" starttime="20220714 14:39:01.310" endtime="20220714 14:39:03.234"/>
</suite>
<status status="PASS" starttime="20220714 14:38:53.139" endtime="20220714 14:39:03.246"/>
</suite>
<suite id="s1-s2" name="Api Store" source="C:\Users\super\workspace\Projeto\automacao_pet\tests\api_store">
<suite id="s1-s2-s1" name="GET STORE ORDER ORDERID" source="C:\Users\super\workspace\Projeto\automacao_pet\tests\api_store\GET_STORE_ORDER_ORDERID.robot">
<test id="s1-s2-s1-t1" name="TC06: Search purchase order by valid id">
<kw name="Given perform a POST request &quot;post/store/order&quot; endpoint sending body &quot;valid&quot;" library="POST_STORE_ORDER" type="SETUP" sourcename="Given perform a POST request &quot;post/store/order&quot; endpoint sending body &quot;${body}&quot;">
<msg timestamp="20220714 14:39:03.355" level="TRACE">Arguments: [ ${body}='valid' ]</msg>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{headers}</var>
<arg>Content-Type=application/json</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220714 14:39:03.356" level="TRACE">Arguments: [ 'Content-Type=application/json' ]</msg>
<msg timestamp="20220714 14:39:03.356" level="TRACE">Return: {'Content-Type': 'application/json'}</msg>
<msg timestamp="20220714 14:39:03.356" level="INFO">&amp;{headers} = { Content-Type=application/json }</msg>
<status status="PASS" starttime="20220714 14:39:03.355" endtime="20220714 14:39:03.357"/>
</kw>
<if>
<branch type="IF" condition="&quot;${body}&quot; == &quot;valid&quot;">
<kw name="Get File" library="OperatingSystem">
<var>${body}</var>
<arg>${BODY_POST_STORE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20220714 14:39:03.358" level="TRACE">Arguments: [ 'C:\\Users\\super\\workspace\\Projeto\\automacao_pet/resource/data/input/POST_STORE.json' ]</msg>
<msg timestamp="20220714 14:39:03.358" level="INFO" html="true">Getting file '&lt;a href="file://C:\Users\super\workspace\Projeto\automacao_pet\resource\data\input\POST_STORE.json"&gt;C:\Users\super\workspace\Projeto\automacao_pet\resource\data\input\POST_STORE.json&lt;/a&gt;'.</msg>
<msg timestamp="20220714 14:39:03.378" level="TRACE">Return: '{\n    "id": 5,\n    "petId": 0,\n    "quantity": 0,\n    "shipDate": "2022-07-07T11:38:55.172Z",\n    "status": "placed",\n    "complete": true\n  }'</msg>
<msg timestamp="20220714 14:39:03.378" level="INFO">${body} = {
    "id": 5,
    "petId": 0,
    "quantity": 0,
    "shipDate": "2022-07-07T11:38:55.172Z",
    "status": "placed",
    "complete": true
  }</msg>
<status status="PASS" starttime="20220714 14:39:03.357" endtime="20220714 14:39:03.379"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${new_body}</var>
<arg>json.loads($body)</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20220714 14:39:03.380" level="TRACE">Arguments: [ 'json.loads($body)' | 'json' ]</msg>
<msg timestamp="20220714 14:39:03.380" level="TRACE">Return: {'complete': True,
 'id': 5,
 'petId': 0,
 'quantity': 0,
 'shipDate': '2022-07-07T11:38:55.172Z',
 'status': 'placed'}</msg>
<msg timestamp="20220714 14:39:03.380" level="INFO">${new_body} = {'id': 5, 'petId': 0, 'quantity': 0, 'shipDate': '2022-07-07T11:38:55.172Z', 'status': 'placed', 'complete': True}</msg>
<status status="PASS" starttime="20220714 14:39:03.379" endtime="20220714 14:39:03.381"/>
</kw>
<kw name="POST" library="RequestsLibrary">
<var>${response}</var>
<arg>${URL_BASE.base}${URL_API_ENDPOINT.order}</arg>
<arg>expected_status=any</arg>
<arg>json=${new_body}</arg>
<arg>headers=&amp;{headers}</arg>
<doc>Sends a POST request.</doc>
<msg timestamp="20220714 14:39:03.384" level="TRACE">Arguments: [ 'https://petstore.swagger.io/v2/store/order' | expected_status='any' | json={'complete': True,
 'id': 5,
 'petId': 0,
 'quantity': 0,
 'shipDate': '2022-07-07T11:38:55.172Z',
 'status': 'placed'} | headers={'Content-Type': 'application/json'} ]</msg>
<msg timestamp="20220714 14:39:03.388" level="DEBUG">Starting new HTTPS connection (1): petstore.swagger.io:443</msg>
<msg timestamp="20220714 14:39:04.290" level="DEBUG">https://petstore.swagger.io:443 "POST /v2/store/order HTTP/1.1" 200 None</msg>
<msg timestamp="20220714 14:39:04.297" level="INFO">POST Request : url=https://petstore.swagger.io/v2/store/order 
 path_url=/v2/store/order 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '114'} 
 body=b'{"id": 5, "petId": 0, "quantity": 0, "shipDate": "2022-07-07T11:38:55.172Z", "status": "placed", "complete": true}' 
 </msg>
<msg timestamp="20220714 14:39:04.298" level="INFO">POST Response : url=https://petstore.swagger.io/v2/store/order 
 status=200, reason=OK 
 headers={'Date': 'Thu, 14 Jul 2022 17:39:04 GMT', 'Content-Type': 'application/json', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Access-Control-Allow-Origin': '*', 'Access-Control-Allow-Methods': 'GET, POST, DELETE, PUT', 'Access-Control-Allow-Headers': 'Content-Type, api_key, Authorization', 'Server': 'Jetty(9.2.9.v20150224)'} 
 body={"id":5,"petId":0,"quantity":0,"shipDate":"2022-07-07T11:38:55.172+0000","status":"placed","complete":true} 
 </msg>
<msg timestamp="20220714 14:39:04.298" level="TRACE">Return: &lt;Response [200]&gt;</msg>
<msg timestamp="20220714 14:39:04.299" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220714 14:39:03.381" endtime="20220714 14:39:04.299"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${response.json()["id"]}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220714 14:39:04.303" level="TRACE">Arguments: [ 5 ]</msg>
<msg timestamp="20220714 14:39:04.304" level="INFO">5</msg>
<msg timestamp="20220714 14:39:04.304" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20220714 14:39:04.300" endtime="20220714 14:39:04.304"/>
</kw>
<kw name="Get From Dictionary" library="Collections">
<var>${ID}</var>
<arg>${response.json()}</arg>
<arg>id</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<msg timestamp="20220714 14:39:04.308" level="TRACE">Arguments: [ {'complete': True,
 'id': 5,
 'petId': 0,
 'quantity': 0,
 'shipDate': '2022-07-07T11:38:55.172+0000',
 'status': 'placed'} | 'id' ]</msg>
<msg timestamp="20220714 14:39:04.308" level="TRACE">Return: 5</msg>
<msg timestamp="20220714 14:39:04.309" level="INFO">${ID} = 5</msg>
<status status="PASS" starttime="20220714 14:39:04.305" endtime="20220714 14:39:04.309"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${ID}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220714 14:39:04.310" level="TRACE">Arguments: [ '${ID}' ]</msg>
<msg timestamp="20220714 14:39:04.311" level="INFO">${ID} = 5</msg>
<msg timestamp="20220714 14:39:04.311" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20220714 14:39:04.309" endtime="20220714 14:39:04.311"/>
</kw>
<status status="PASS" starttime="20220714 14:39:03.357" endtime="20220714 14:39:04.311"/>
</branch>
<branch type="ELSE">
<kw name="Get File" library="OperatingSystem">
<var>${new_body}</var>
<arg>${BODY_EMPTY}</arg>
<doc>Returns the contents of a specified file.</doc>
<status status="NOT RUN" starttime="20220714 14:39:04.312" endtime="20220714 14:39:04.312"/>
</kw>
<kw name="POST" library="RequestsLibrary">
<var>${response}</var>
<arg>${URL_BASE.base}${URL_API_ENDPOINT.order}</arg>
<arg>data=${new_body}</arg>
<arg>headers=&amp;{headers}</arg>
<arg>expected_status=any</arg>
<doc>Sends a POST request.</doc>
<status status="NOT RUN" starttime="20220714 14:39:04.313" endtime="20220714 14:39:04.313"/>
</kw>
<status status="NOT RUN" starttime="20220714 14:39:04.311" endtime="20220714 14:39:04.313"/>
</branch>
<status status="PASS" starttime="20220714 14:39:03.357" endtime="20220714 14:39:04.314"/>
</if>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220714 14:39:04.315" level="TRACE">Arguments: [ '${response}' ]</msg>
<msg timestamp="20220714 14:39:04.316" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<msg timestamp="20220714 14:39:04.316" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20220714 14:39:04.314" endtime="20220714 14:39:04.316"/>
</kw>
<msg timestamp="20220714 14:39:04.316" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20220714 14:39:03.355" endtime="20220714 14:39:04.317"/>
</kw>
<kw name="Given perform a GET request &quot;get/store/order/{orderId}&quot; endpoint sending orderId &quot;valid&quot;" library="GET_STORE_ORDER_ORDERID" sourcename="Given perform a GET request &quot;get/store/order/{orderId}&quot; endpoint sending orderId &quot;${orderId}&quot;">
<msg timestamp="20220714 14:39:04.320" level="TRACE">Arguments: [ ${orderId}='valid' ]</msg>
<if>
<branch type="IF" condition="&quot;${orderId}&quot; == &quot;valid&quot;">
<kw name="Set Variable" library="BuiltIn">
<var>${orderId}</var>
<arg>${ID}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<msg timestamp="20220714 14:39:04.322" level="TRACE">Arguments: [ 5 ]</msg>
<msg timestamp="20220714 14:39:04.322" level="TRACE">Return: 5</msg>
<msg timestamp="20220714 14:39:04.323" level="INFO">${orderId} = 5</msg>
<status status="PASS" starttime="20220714 14:39:04.321" endtime="20220714 14:39:04.323"/>
</kw>
<status status="PASS" starttime="20220714 14:39:04.321" endtime="20220714 14:39:04.323"/>
</branch>
<status status="PASS" starttime="20220714 14:39:04.320" endtime="20220714 14:39:04.323"/>
</if>
<kw name="Format String" library="String">
<var>${new_url}</var>
<arg>${URL_API_ENDPOINT.store}</arg>
<arg>orderId=${orderId}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220714 14:39:04.326" level="TRACE">Arguments: [ '/store/order/{orderId}' | orderId=5 ]</msg>
<msg timestamp="20220714 14:39:04.327" level="TRACE">Return: '/store/order/5'</msg>
<msg timestamp="20220714 14:39:04.327" level="INFO">${new_url} = /store/order/5</msg>
<status status="PASS" starttime="20220714 14:39:04.324" endtime="20220714 14:39:04.328"/>
</kw>
<kw name="GET" library="RequestsLibrary">
<var>${response}</var>
<arg>${URL_BASE.base}${new_url}</arg>
<arg>expected_status=any</arg>
<doc>Sends a GET request.</doc>
<msg timestamp="20220714 14:39:04.331" level="TRACE">Arguments: [ 'https://petstore.swagger.io/v2/store/order/5' | expected_status='any' ]</msg>
<msg timestamp="20220714 14:39:04.338" level="DEBUG">Starting new HTTPS connection (1): petstore.swagger.io:443</msg>
<msg timestamp="20220714 14:39:05.142" level="DEBUG">https://petstore.swagger.io:443 "GET /v2/store/order/5 HTTP/1.1" 200 None</msg>
<msg timestamp="20220714 14:39:05.148" level="INFO">GET Request : url=https://petstore.swagger.io/v2/store/order/5 
 path_url=/v2/store/order/5 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20220714 14:39:05.148" level="INFO">GET Response : url=https://petstore.swagger.io/v2/store/order/5 
 status=200, reason=OK 
 headers={'Date': 'Thu, 14 Jul 2022 17:39:05 GMT', 'Content-Type': 'application/json', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Access-Control-Allow-Origin': '*', 'Access-Control-Allow-Methods': 'GET, POST, DELETE, PUT', 'Access-Control-Allow-Headers': 'Content-Type, api_key, Authorization', 'Server': 'Jetty(9.2.9.v20150224)'} 
 body={"id":5,"petId":0,"quantity":0,"shipDate":"2022-07-07T11:38:55.172+0000","status":"placed","complete":true} 
 </msg>
<msg timestamp="20220714 14:39:05.148" level="TRACE">Return: &lt;Response [200]&gt;</msg>
<msg timestamp="20220714 14:39:05.149" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220714 14:39:04.328" endtime="20220714 14:39:05.149"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220714 14:39:05.150" level="TRACE">Arguments: [ '${response}' ]</msg>
<msg timestamp="20220714 14:39:05.151" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<msg timestamp="20220714 14:39:05.152" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20220714 14:39:05.150" endtime="20220714 14:39:05.152"/>
</kw>
<msg timestamp="20220714 14:39:05.152" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20220714 14:39:04.319" endtime="20220714 14:39:05.152"/>
</kw>
<kw name="Then expected status code &quot;200&quot;" library="kws_shared" sourcename="Then expected status code &quot;${expected}&quot;">
<doc>Keyword responsible for validating the status code upon test requirement.</doc>
<msg timestamp="20220714 14:39:05.155" level="TRACE">Arguments: [ ${expected}='200' ]</msg>
<kw name="Status Should Be" library="RequestsLibrary">
<arg>${expected}</arg>
<doc>Fails if response status code is different than the expected.</doc>
<msg timestamp="20220714 14:39:05.157" level="TRACE">Arguments: [ '200' ]</msg>
<msg timestamp="20220714 14:39:05.157" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20220714 14:39:05.156" endtime="20220714 14:39:05.157"/>
</kw>
<msg timestamp="20220714 14:39:05.158" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20220714 14:39:05.154" endtime="20220714 14:39:05.158"/>
</kw>
<kw name="And the contract of the request &quot;orderId successfully&quot;" library="kws_shared" sourcename="And the contract of the request &quot;${schema}&quot;">
<doc>Keyword responsible for getting the schema model received by parameter by gherkin and validating it with the api response.</doc>
<msg timestamp="20220714 14:39:05.161" level="TRACE">Arguments: [ ${schema}='orderId successfully' ]</msg>
<kw name="Get Schema Json" library="helper">
<var>${arg_schema}</var>
<arg>${schema}</arg>
<doc>Keyword responsável por pegar o arquivo "schemas.json"
Converte para json e retorna o arquivo formatado.</doc>
<msg timestamp="20220714 14:39:05.163" level="TRACE">Arguments: [ ${text}='orderId successfully' ]</msg>
<kw name="Get File" library="OperatingSystem">
<var>${file}</var>
<arg>${ROOT}/resource/data/schemas/schemas.json</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20220714 14:39:05.164" level="TRACE">Arguments: [ 'C:\\Users\\super\\workspace\\Projeto\\automacao_pet/resource/data/schemas/schemas.json' ]</msg>
<msg timestamp="20220714 14:39:05.165" level="INFO" html="true">Getting file '&lt;a href="file://C:\Users\super\workspace\Projeto\automacao_pet\resource\data\schemas\schemas.json"&gt;C:\Users\super\workspace\Projeto\automacao_pet\resource\data\schemas\schemas.json&lt;/a&gt;'.</msg>
<msg timestamp="20220714 14:39:05.166" level="TRACE">Return: '{\n    "petId successfully": "api_pet/get_petid.json",\n    "pet registered successfully": "api_pet/post_pet.json",\n    "orderId successfully": "api_store/get_store_orderid.json",\n    "order registered successfully": "api_store/post_store.json",\n    "pet changed successfully": "api_pet/put_pet.json"\n}'</msg>
<msg timestamp="20220714 14:39:05.166" level="INFO">${file} = {
    "petId successfully": "api_pet/get_petid.json",
    "pet registered successfully": "api_pet/post_pet.json",
    "orderId successfully": "api_store/get_store_orderid.json",
    "order registered ...</msg>
<status status="PASS" starttime="20220714 14:39:05.164" endtime="20220714 14:39:05.166"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${json}</var>
<arg>json.loads($file)</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20220714 14:39:05.168" level="TRACE">Arguments: [ 'json.loads($file)' | 'json' ]</msg>
<msg timestamp="20220714 14:39:05.169" level="TRACE">Return: {'order registered successfully': 'api_store/post_store.json',
 'orderId successfully': 'api_store/get_store_orderid.json',
 'pet changed successfully': 'api_pet/put_pet.json',
 'pet registered successfully': 'api_pet/post_pet.json',
 'petId successfully': 'api_pet/get_petid.json'}</msg>
<msg timestamp="20220714 14:39:05.169" level="INFO">${json} = {'petId successfully': 'api_pet/get_petid.json', 'pet registered successfully': 'api_pet/post_pet.json', 'orderId successfully': 'api_store/get_store_orderid.json', 'order registered successfully': 'a...</msg>
<status status="PASS" starttime="20220714 14:39:05.167" endtime="20220714 14:39:05.169"/>
</kw>
<kw name="Get From Dictionary" library="Collections">
<var>${json_schemas}</var>
<arg>${json}</arg>
<arg>${text}</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<msg timestamp="20220714 14:39:05.171" level="TRACE">Arguments: [ {'order registered successfully': 'api_store/post_store.json',
 'orderId successfully': 'api_store/get_store_orderid.json',
 'pet changed successfully': 'api_pet/put_pet.json',
 'pet registered successfully': 'api_pet/post_pet.json',
 'petId successfully': 'api_pet/get_petid.json'} | 'orderId successfully' ]</msg>
<msg timestamp="20220714 14:39:05.172" level="TRACE">Return: 'api_store/get_store_orderid.json'</msg>
<msg timestamp="20220714 14:39:05.172" level="INFO">${json_schemas} = api_store/get_store_orderid.json</msg>
<status status="PASS" starttime="20220714 14:39:05.170" endtime="20220714 14:39:05.172"/>
</kw>
<msg timestamp="20220714 14:39:05.172" level="TRACE">Return: 'api_store/get_store_orderid.json'</msg>
<msg timestamp="20220714 14:39:05.173" level="INFO">${arg_schema} = api_store/get_store_orderid.json</msg>
<status status="PASS" starttime="20220714 14:39:05.162" endtime="20220714 14:39:05.173"/>
</kw>
<kw name="Validate Jsonschema From File" library="JsonValidator">
<arg>${response.text}</arg>
<arg>${ROOT}/resource/data/schemas/${arg_schema}</arg>
<doc>Validate JSON according to schema, loaded from a file.</doc>
<msg timestamp="20220714 14:39:05.176" level="TRACE">Arguments: [ '{"id":5,"petId":0,"quantity":0,"shipDate":"2022-07-07T11:38:55.172+0000","status":"placed","complete":true}' | 'C:\\Users\\super\\workspace\\Projeto\\automacao_pet/resource/data/schemas/api_store/get_store_orderid.json' ]</msg>
<msg timestamp="20220714 14:39:05.189" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20220714 14:39:05.173" endtime="20220714 14:39:05.189"/>
</kw>
<msg timestamp="20220714 14:39:05.190" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20220714 14:39:05.160" endtime="20220714 14:39:05.190"/>
</kw>
<doc>Test responsible for making the user able to search for order information by sending a valid orderId</doc>
<tag>API_store</tag>
<tag>EP_orderId</tag>
<tag>TC06</tag>
<status status="PASS" starttime="20220714 14:39:03.353" endtime="20220714 14:39:05.192"/>
</test>
<test id="s1-s2-s1-t2" name="TC07: Validate error message when informing invalid id">
<kw name="Given perform a GET request &quot;get/store/order/{orderId}&quot; endpoint sending orderId &quot;00&quot;" library="GET_STORE_ORDER_ORDERID" sourcename="Given perform a GET request &quot;get/store/order/{orderId}&quot; endpoint sending orderId &quot;${orderId}&quot;">
<msg timestamp="20220714 14:39:05.206" level="TRACE">Arguments: [ ${orderId}='00' ]</msg>
<if>
<branch type="IF" condition="&quot;${orderId}&quot; == &quot;valid&quot;">
<kw name="Set Variable" library="BuiltIn">
<var>${orderId}</var>
<arg>${ID}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20220714 14:39:05.207" endtime="20220714 14:39:05.207"/>
</kw>
<status status="NOT RUN" starttime="20220714 14:39:05.207" endtime="20220714 14:39:05.207"/>
</branch>
<status status="PASS" starttime="20220714 14:39:05.206" endtime="20220714 14:39:05.208"/>
</if>
<kw name="Format String" library="String">
<var>${new_url}</var>
<arg>${URL_API_ENDPOINT.store}</arg>
<arg>orderId=${orderId}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220714 14:39:05.211" level="TRACE">Arguments: [ '/store/order/{orderId}' | orderId='00' ]</msg>
<msg timestamp="20220714 14:39:05.212" level="TRACE">Return: '/store/order/00'</msg>
<msg timestamp="20220714 14:39:05.212" level="INFO">${new_url} = /store/order/00</msg>
<status status="PASS" starttime="20220714 14:39:05.208" endtime="20220714 14:39:05.212"/>
</kw>
<kw name="GET" library="RequestsLibrary">
<var>${response}</var>
<arg>${URL_BASE.base}${new_url}</arg>
<arg>expected_status=any</arg>
<doc>Sends a GET request.</doc>
<msg timestamp="20220714 14:39:05.216" level="TRACE">Arguments: [ 'https://petstore.swagger.io/v2/store/order/00' | expected_status='any' ]</msg>
<msg timestamp="20220714 14:39:05.228" level="DEBUG">Starting new HTTPS connection (1): petstore.swagger.io:443</msg>
<msg timestamp="20220714 14:39:06.036" level="DEBUG">https://petstore.swagger.io:443 "GET /v2/store/order/00 HTTP/1.1" 404 None</msg>
<msg timestamp="20220714 14:39:06.042" level="INFO">GET Request : url=https://petstore.swagger.io/v2/store/order/00 
 path_url=/v2/store/order/00 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20220714 14:39:06.042" level="INFO">GET Response : url=https://petstore.swagger.io/v2/store/order/00 
 status=404, reason=Not Found 
 headers={'Date': 'Thu, 14 Jul 2022 17:39:05 GMT', 'Content-Type': 'application/json', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Access-Control-Allow-Origin': '*', 'Access-Control-Allow-Methods': 'GET, POST, DELETE, PUT', 'Access-Control-Allow-Headers': 'Content-Type, api_key, Authorization', 'Server': 'Jetty(9.2.9.v20150224)'} 
 body={"code":1,"type":"error","message":"Order not found"} 
 </msg>
<msg timestamp="20220714 14:39:06.042" level="TRACE">Return: &lt;Response [404]&gt;</msg>
<msg timestamp="20220714 14:39:06.043" level="INFO">${response} = &lt;Response [404]&gt;</msg>
<status status="PASS" starttime="20220714 14:39:05.213" endtime="20220714 14:39:06.043"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220714 14:39:06.046" level="TRACE">Arguments: [ '${response}' ]</msg>
<msg timestamp="20220714 14:39:06.047" level="INFO">${response} = &lt;Response [404]&gt;</msg>
<msg timestamp="20220714 14:39:06.048" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20220714 14:39:06.045" endtime="20220714 14:39:06.048"/>
</kw>
<msg timestamp="20220714 14:39:06.048" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20220714 14:39:05.205" endtime="20220714 14:39:06.048"/>
</kw>
<kw name="Then expected status code &quot;404&quot;" library="kws_shared" sourcename="Then expected status code &quot;${expected}&quot;">
<doc>Keyword responsible for validating the status code upon test requirement.</doc>
<msg timestamp="20220714 14:39:06.052" level="TRACE">Arguments: [ ${expected}='404' ]</msg>
<kw name="Status Should Be" library="RequestsLibrary">
<arg>${expected}</arg>
<doc>Fails if response status code is different than the expected.</doc>
<msg timestamp="20220714 14:39:06.054" level="TRACE">Arguments: [ '404' ]</msg>
<msg timestamp="20220714 14:39:06.054" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20220714 14:39:06.053" endtime="20220714 14:39:06.054"/>
</kw>
<msg timestamp="20220714 14:39:06.055" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20220714 14:39:06.050" endtime="20220714 14:39:06.055"/>
</kw>
<kw name="And the request must contain the return message &quot;Order not found&quot;" library="kws_shared" sourcename="And the request must contain the return message &quot;${message}&quot;">
<msg timestamp="20220714 14:39:06.058" level="TRACE">Arguments: [ ${message}='Order not found' ]</msg>
<kw name="Should Contain" library="BuiltIn">
<arg>${response.text}</arg>
<arg>"${message}"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<msg timestamp="20220714 14:39:06.063" level="TRACE">Arguments: [ '{"code":1,"type":"error","message":"Order not found"}' | '"Order not found"' ]</msg>
<msg timestamp="20220714 14:39:06.064" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20220714 14:39:06.058" endtime="20220714 14:39:06.065"/>
</kw>
<msg timestamp="20220714 14:39:06.065" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20220714 14:39:06.057" endtime="20220714 14:39:06.066"/>
</kw>
<doc>Test responsible for validating that the user is unable to fetch order information by sending an invalid orderId.</doc>
<tag>API_store</tag>
<tag>EP_orderId</tag>
<tag>TC07</tag>
<status status="PASS" starttime="20220714 14:39:05.200" endtime="20220714 14:39:06.068"/>
</test>
<test id="s1-s2-s1-t3" name="TC08: Validate error message when informing an ID greater than allowed">
<kw name="Given perform a GET request &quot;get/store/order/{orderId}&quot; endpoint sending orderId &quot;11&quot;" library="GET_STORE_ORDER_ORDERID" sourcename="Given perform a GET request &quot;get/store/order/{orderId}&quot; endpoint sending orderId &quot;${orderId}&quot;">
<msg timestamp="20220714 14:39:06.078" level="TRACE">Arguments: [ ${orderId}='11' ]</msg>
<if>
<branch type="IF" condition="&quot;${orderId}&quot; == &quot;valid&quot;">
<kw name="Set Variable" library="BuiltIn">
<var>${orderId}</var>
<arg>${ID}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20220714 14:39:06.081" endtime="20220714 14:39:06.082"/>
</kw>
<status status="NOT RUN" starttime="20220714 14:39:06.080" endtime="20220714 14:39:06.082"/>
</branch>
<status status="PASS" starttime="20220714 14:39:06.079" endtime="20220714 14:39:06.082"/>
</if>
<kw name="Format String" library="String">
<var>${new_url}</var>
<arg>${URL_API_ENDPOINT.store}</arg>
<arg>orderId=${orderId}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220714 14:39:06.089" level="TRACE">Arguments: [ '/store/order/{orderId}' | orderId='11' ]</msg>
<msg timestamp="20220714 14:39:06.090" level="TRACE">Return: '/store/order/11'</msg>
<msg timestamp="20220714 14:39:06.090" level="INFO">${new_url} = /store/order/11</msg>
<status status="PASS" starttime="20220714 14:39:06.083" endtime="20220714 14:39:06.090"/>
</kw>
<kw name="GET" library="RequestsLibrary">
<var>${response}</var>
<arg>${URL_BASE.base}${new_url}</arg>
<arg>expected_status=any</arg>
<doc>Sends a GET request.</doc>
<msg timestamp="20220714 14:39:06.094" level="TRACE">Arguments: [ 'https://petstore.swagger.io/v2/store/order/11' | expected_status='any' ]</msg>
<msg timestamp="20220714 14:39:06.102" level="DEBUG">Starting new HTTPS connection (1): petstore.swagger.io:443</msg>
<msg timestamp="20220714 14:39:07.107" level="DEBUG">https://petstore.swagger.io:443 "GET /v2/store/order/11 HTTP/1.1" 200 None</msg>
<msg timestamp="20220714 14:39:07.114" level="INFO">GET Request : url=https://petstore.swagger.io/v2/store/order/11 
 path_url=/v2/store/order/11 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20220714 14:39:07.115" level="INFO">GET Response : url=https://petstore.swagger.io/v2/store/order/11 
 status=200, reason=OK 
 headers={'Date': 'Thu, 14 Jul 2022 17:39:07 GMT', 'Content-Type': 'application/json', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Access-Control-Allow-Origin': '*', 'Access-Control-Allow-Methods': 'GET, POST, DELETE, PUT', 'Access-Control-Allow-Headers': 'Content-Type, api_key, Authorization', 'Server': 'Jetty(9.2.9.v20150224)'} 
 body={"id":11,"petId":-58684304,"quantity":-89160899,"shipDate":"2012-05-06T13:18:12.774+0000","status":"delivered","complete":false} 
 </msg>
<msg timestamp="20220714 14:39:07.115" level="TRACE">Return: &lt;Response [200]&gt;</msg>
<msg timestamp="20220714 14:39:07.115" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220714 14:39:06.091" endtime="20220714 14:39:07.115"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220714 14:39:07.116" level="TRACE">Arguments: [ '${response}' ]</msg>
<msg timestamp="20220714 14:39:07.117" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<msg timestamp="20220714 14:39:07.118" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20220714 14:39:07.116" endtime="20220714 14:39:07.118"/>
</kw>
<msg timestamp="20220714 14:39:07.118" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20220714 14:39:06.077" endtime="20220714 14:39:07.118"/>
</kw>
<kw name="Then expected status code &quot;404&quot;" library="kws_shared" sourcename="Then expected status code &quot;${expected}&quot;">
<doc>Keyword responsible for validating the status code upon test requirement.</doc>
<msg timestamp="20220714 14:39:07.121" level="TRACE">Arguments: [ ${expected}='404' ]</msg>
<kw name="Status Should Be" library="RequestsLibrary">
<arg>${expected}</arg>
<doc>Fails if response status code is different than the expected.</doc>
<msg timestamp="20220714 14:39:07.123" level="TRACE">Arguments: [ '404' ]</msg>
<msg timestamp="20220714 14:39:07.179" level="FAIL">Url: https://petstore.swagger.io/v2/store/order/11 Expected status: 200 != 404</msg>
<msg timestamp="20220714 14:39:07.179" level="DEBUG">Traceback (most recent call last):
  File "C:\Python310\lib\site-packages\RequestsLibrary\RequestsKeywords.py", line 121, in status_should_be
    self._check_status(expected_status, response, msg)
  File "C:\Python310\lib\site-packages\RequestsLibrary\SessionKeywords.py", line 577, in _check_status
    assert_equal(resp.status_code, expected_status, msg)
  File "C:\Python310\lib\site-packages\robot\utils\asserts.py", line 182, in assert_equal
    _report_inequality(first, second, '!=', msg, values, formatter)
  File "C:\Python310\lib\site-packages\robot\utils\asserts.py", line 231, in _report_inequality
    raise AssertionError(msg)</msg>
<status status="FAIL" starttime="20220714 14:39:07.122" endtime="20220714 14:39:07.180"/>
</kw>
<status status="FAIL" starttime="20220714 14:39:07.120" endtime="20220714 14:39:07.180"/>
</kw>
<kw name="And the request must contain the return message &quot;Order not found&quot;" library="kws_shared" sourcename="And the request must contain the return message &quot;${message}&quot;">
<status status="NOT RUN" starttime="20220714 14:39:07.182" endtime="20220714 14:39:07.182"/>
</kw>
<doc>Test responsible for validating that the user is unable to fetch order information by sending an invalid orderId.</doc>
<tag>API_store</tag>
<tag>EP_orderId</tag>
<tag>TC08</tag>
<status status="FAIL" starttime="20220714 14:39:06.074" endtime="20220714 14:39:07.184">Url: https://petstore.swagger.io/v2/store/order/11 Expected status: 200 != 404</status>
</test>
<test id="s1-s2-s1-t4" name="TC09: Search purchase order by sending empty">
<kw name="Given perform a GET request &quot;get/store/order/{orderId}&quot; endpoint sending orderId &quot;&quot;" library="GET_STORE_ORDER_ORDERID" sourcename="Given perform a GET request &quot;get/store/order/{orderId}&quot; endpoint sending orderId &quot;${orderId}&quot;">
<msg timestamp="20220714 14:39:07.197" level="TRACE">Arguments: [ ${orderId}='' ]</msg>
<if>
<branch type="IF" condition="&quot;${orderId}&quot; == &quot;valid&quot;">
<kw name="Set Variable" library="BuiltIn">
<var>${orderId}</var>
<arg>${ID}</arg>
<doc>Returns the given values which can then be assigned to a variables.</doc>
<status status="NOT RUN" starttime="20220714 14:39:07.198" endtime="20220714 14:39:07.198"/>
</kw>
<status status="NOT RUN" starttime="20220714 14:39:07.198" endtime="20220714 14:39:07.199"/>
</branch>
<status status="PASS" starttime="20220714 14:39:07.197" endtime="20220714 14:39:07.199"/>
</if>
<kw name="Format String" library="String">
<var>${new_url}</var>
<arg>${URL_API_ENDPOINT.store}</arg>
<arg>orderId=${orderId}</arg>
<doc>Formats a ``template`` using the given ``positional`` and ``named`` arguments.</doc>
<msg timestamp="20220714 14:39:07.202" level="TRACE">Arguments: [ '/store/order/{orderId}' | orderId='' ]</msg>
<msg timestamp="20220714 14:39:07.203" level="TRACE">Return: '/store/order/'</msg>
<msg timestamp="20220714 14:39:07.204" level="INFO">${new_url} = /store/order/</msg>
<status status="PASS" starttime="20220714 14:39:07.199" endtime="20220714 14:39:07.204"/>
</kw>
<kw name="GET" library="RequestsLibrary">
<var>${response}</var>
<arg>${URL_BASE.base}${new_url}</arg>
<arg>expected_status=any</arg>
<doc>Sends a GET request.</doc>
<msg timestamp="20220714 14:39:07.207" level="TRACE">Arguments: [ 'https://petstore.swagger.io/v2/store/order/' | expected_status='any' ]</msg>
<msg timestamp="20220714 14:39:07.215" level="DEBUG">Starting new HTTPS connection (1): petstore.swagger.io:443</msg>
<msg timestamp="20220714 14:39:08.131" level="DEBUG">https://petstore.swagger.io:443 "GET /v2/store/order/ HTTP/1.1" 405 102</msg>
<msg timestamp="20220714 14:39:08.136" level="INFO">GET Request : url=https://petstore.swagger.io/v2/store/order/ 
 path_url=/v2/store/order/ 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive'} 
 body=None 
 </msg>
<msg timestamp="20220714 14:39:08.137" level="INFO">GET Response : url=https://petstore.swagger.io/v2/store/order/ 
 status=405, reason=Method Not Allowed 
 headers={'Date': 'Thu, 14 Jul 2022 17:39:08 GMT', 'Content-Type': 'application/xml', 'Content-Length': '102', 'Connection': 'keep-alive', 'Access-Control-Allow-Origin': '*', 'Access-Control-Allow-Methods': 'GET, POST, DELETE, PUT', 'Access-Control-Allow-Headers': 'Content-Type, api_key, Authorization', 'Server': 'Jetty(9.2.9.v20150224)'} 
 body=&lt;?xml version="1.0" encoding="UTF-8" standalone="yes"?&gt;&lt;apiResponse&gt;&lt;type&gt;unknown&lt;/type&gt;&lt;/apiResponse&gt; 
 </msg>
<msg timestamp="20220714 14:39:08.138" level="TRACE">Return: &lt;Response [405]&gt;</msg>
<msg timestamp="20220714 14:39:08.138" level="INFO">${response} = &lt;Response [405]&gt;</msg>
<status status="PASS" starttime="20220714 14:39:07.204" endtime="20220714 14:39:08.138"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220714 14:39:08.140" level="TRACE">Arguments: [ '${response}' ]</msg>
<msg timestamp="20220714 14:39:08.141" level="INFO">${response} = &lt;Response [405]&gt;</msg>
<msg timestamp="20220714 14:39:08.141" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20220714 14:39:08.139" endtime="20220714 14:39:08.142"/>
</kw>
<msg timestamp="20220714 14:39:08.142" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20220714 14:39:07.196" endtime="20220714 14:39:08.143"/>
</kw>
<kw name="Then expected status code &quot;405&quot;" library="kws_shared" sourcename="Then expected status code &quot;${expected}&quot;">
<doc>Keyword responsible for validating the status code upon test requirement.</doc>
<msg timestamp="20220714 14:39:08.146" level="TRACE">Arguments: [ ${expected}='405' ]</msg>
<kw name="Status Should Be" library="RequestsLibrary">
<arg>${expected}</arg>
<doc>Fails if response status code is different than the expected.</doc>
<msg timestamp="20220714 14:39:08.148" level="TRACE">Arguments: [ '405' ]</msg>
<msg timestamp="20220714 14:39:08.149" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20220714 14:39:08.147" endtime="20220714 14:39:08.149"/>
</kw>
<msg timestamp="20220714 14:39:08.149" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20220714 14:39:08.145" endtime="20220714 14:39:08.150"/>
</kw>
<doc>Test responsible for validating that the user cannot retrieve order information by sending an empty orderId.</doc>
<tag>API_store</tag>
<tag>EP_orderId</tag>
<tag>TC09</tag>
<status status="PASS" starttime="20220714 14:39:07.192" endtime="20220714 14:39:08.151"/>
</test>
<status status="FAIL" starttime="20220714 14:39:03.274" endtime="20220714 14:39:08.161"/>
</suite>
<suite id="s1-s2-s2" name="POST STORE ORDER" source="C:\Users\super\workspace\Projeto\automacao_pet\tests\api_store\POST_STORE_ORDER.robot">
<test id="s1-s2-s2-t1" name="TC10: Insert a new order when informs a valid body">
<kw name="Given perform a POST request &quot;post/store/order&quot; endpoint sending body &quot;valid&quot;" library="POST_STORE_ORDER" sourcename="Given perform a POST request &quot;post/store/order&quot; endpoint sending body &quot;${body}&quot;">
<msg timestamp="20220714 14:39:08.272" level="TRACE">Arguments: [ ${body}='valid' ]</msg>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{headers}</var>
<arg>Content-Type=application/json</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220714 14:39:08.273" level="TRACE">Arguments: [ 'Content-Type=application/json' ]</msg>
<msg timestamp="20220714 14:39:08.274" level="TRACE">Return: {'Content-Type': 'application/json'}</msg>
<msg timestamp="20220714 14:39:08.274" level="INFO">&amp;{headers} = { Content-Type=application/json }</msg>
<status status="PASS" starttime="20220714 14:39:08.273" endtime="20220714 14:39:08.274"/>
</kw>
<if>
<branch type="IF" condition="&quot;${body}&quot; == &quot;valid&quot;">
<kw name="Get File" library="OperatingSystem">
<var>${body}</var>
<arg>${BODY_POST_STORE}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20220714 14:39:08.276" level="TRACE">Arguments: [ 'C:\\Users\\super\\workspace\\Projeto\\automacao_pet/resource/data/input/POST_STORE.json' ]</msg>
<msg timestamp="20220714 14:39:08.277" level="INFO" html="true">Getting file '&lt;a href="file://C:\Users\super\workspace\Projeto\automacao_pet\resource\data\input\POST_STORE.json"&gt;C:\Users\super\workspace\Projeto\automacao_pet\resource\data\input\POST_STORE.json&lt;/a&gt;'.</msg>
<msg timestamp="20220714 14:39:08.278" level="TRACE">Return: '{\n    "id": 5,\n    "petId": 0,\n    "quantity": 0,\n    "shipDate": "2022-07-07T11:38:55.172Z",\n    "status": "placed",\n    "complete": true\n  }'</msg>
<msg timestamp="20220714 14:39:08.278" level="INFO">${body} = {
    "id": 5,
    "petId": 0,
    "quantity": 0,
    "shipDate": "2022-07-07T11:38:55.172Z",
    "status": "placed",
    "complete": true
  }</msg>
<status status="PASS" starttime="20220714 14:39:08.276" endtime="20220714 14:39:08.278"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${new_body}</var>
<arg>json.loads($body)</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20220714 14:39:08.280" level="TRACE">Arguments: [ 'json.loads($body)' | 'json' ]</msg>
<msg timestamp="20220714 14:39:08.281" level="TRACE">Return: {'complete': True,
 'id': 5,
 'petId': 0,
 'quantity': 0,
 'shipDate': '2022-07-07T11:38:55.172Z',
 'status': 'placed'}</msg>
<msg timestamp="20220714 14:39:08.281" level="INFO">${new_body} = {'id': 5, 'petId': 0, 'quantity': 0, 'shipDate': '2022-07-07T11:38:55.172Z', 'status': 'placed', 'complete': True}</msg>
<status status="PASS" starttime="20220714 14:39:08.279" endtime="20220714 14:39:08.281"/>
</kw>
<kw name="POST" library="RequestsLibrary">
<var>${response}</var>
<arg>${URL_BASE.base}${URL_API_ENDPOINT.order}</arg>
<arg>expected_status=any</arg>
<arg>json=${new_body}</arg>
<arg>headers=&amp;{headers}</arg>
<doc>Sends a POST request.</doc>
<msg timestamp="20220714 14:39:08.291" level="TRACE">Arguments: [ 'https://petstore.swagger.io/v2/store/order' | expected_status='any' | json={'complete': True,
 'id': 5,
 'petId': 0,
 'quantity': 0,
 'shipDate': '2022-07-07T11:38:55.172Z',
 'status': 'placed'} | headers={'Content-Type': 'application/json'} ]</msg>
<msg timestamp="20220714 14:39:08.302" level="DEBUG">Starting new HTTPS connection (1): petstore.swagger.io:443</msg>
<msg timestamp="20220714 14:39:09.096" level="DEBUG">https://petstore.swagger.io:443 "POST /v2/store/order HTTP/1.1" 200 None</msg>
<msg timestamp="20220714 14:39:09.102" level="INFO">POST Request : url=https://petstore.swagger.io/v2/store/order 
 path_url=/v2/store/order 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '114'} 
 body=b'{"id": 5, "petId": 0, "quantity": 0, "shipDate": "2022-07-07T11:38:55.172Z", "status": "placed", "complete": true}' 
 </msg>
<msg timestamp="20220714 14:39:09.103" level="INFO">POST Response : url=https://petstore.swagger.io/v2/store/order 
 status=200, reason=OK 
 headers={'Date': 'Thu, 14 Jul 2022 17:39:09 GMT', 'Content-Type': 'application/json', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Access-Control-Allow-Origin': '*', 'Access-Control-Allow-Methods': 'GET, POST, DELETE, PUT', 'Access-Control-Allow-Headers': 'Content-Type, api_key, Authorization', 'Server': 'Jetty(9.2.9.v20150224)'} 
 body={"id":5,"petId":0,"quantity":0,"shipDate":"2022-07-07T11:38:55.172+0000","status":"placed","complete":true} 
 </msg>
<msg timestamp="20220714 14:39:09.103" level="TRACE">Return: &lt;Response [200]&gt;</msg>
<msg timestamp="20220714 14:39:09.104" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<status status="PASS" starttime="20220714 14:39:08.282" endtime="20220714 14:39:09.104"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${response.json()["id"]}</arg>
<doc>Logs the given message with the given level.</doc>
<msg timestamp="20220714 14:39:09.107" level="TRACE">Arguments: [ 5 ]</msg>
<msg timestamp="20220714 14:39:09.108" level="INFO">5</msg>
<msg timestamp="20220714 14:39:09.108" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20220714 14:39:09.105" endtime="20220714 14:39:09.108"/>
</kw>
<kw name="Get From Dictionary" library="Collections">
<var>${ID}</var>
<arg>${response.json()}</arg>
<arg>id</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<msg timestamp="20220714 14:39:09.111" level="TRACE">Arguments: [ {'complete': True,
 'id': 5,
 'petId': 0,
 'quantity': 0,
 'shipDate': '2022-07-07T11:38:55.172+0000',
 'status': 'placed'} | 'id' ]</msg>
<msg timestamp="20220714 14:39:09.112" level="TRACE">Return: 5</msg>
<msg timestamp="20220714 14:39:09.112" level="INFO">${ID} = 5</msg>
<status status="PASS" starttime="20220714 14:39:09.109" endtime="20220714 14:39:09.112"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${ID}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220714 14:39:09.113" level="TRACE">Arguments: [ '${ID}' ]</msg>
<msg timestamp="20220714 14:39:09.114" level="INFO">${ID} = 5</msg>
<msg timestamp="20220714 14:39:09.114" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20220714 14:39:09.113" endtime="20220714 14:39:09.114"/>
</kw>
<status status="PASS" starttime="20220714 14:39:08.275" endtime="20220714 14:39:09.114"/>
</branch>
<branch type="ELSE">
<kw name="Get File" library="OperatingSystem">
<var>${new_body}</var>
<arg>${BODY_EMPTY}</arg>
<doc>Returns the contents of a specified file.</doc>
<status status="NOT RUN" starttime="20220714 14:39:09.115" endtime="20220714 14:39:09.115"/>
</kw>
<kw name="POST" library="RequestsLibrary">
<var>${response}</var>
<arg>${URL_BASE.base}${URL_API_ENDPOINT.order}</arg>
<arg>data=${new_body}</arg>
<arg>headers=&amp;{headers}</arg>
<arg>expected_status=any</arg>
<doc>Sends a POST request.</doc>
<status status="NOT RUN" starttime="20220714 14:39:09.116" endtime="20220714 14:39:09.116"/>
</kw>
<status status="NOT RUN" starttime="20220714 14:39:09.114" endtime="20220714 14:39:09.116"/>
</branch>
<status status="PASS" starttime="20220714 14:39:08.274" endtime="20220714 14:39:09.116"/>
</if>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220714 14:39:09.117" level="TRACE">Arguments: [ '${response}' ]</msg>
<msg timestamp="20220714 14:39:09.118" level="INFO">${response} = &lt;Response [200]&gt;</msg>
<msg timestamp="20220714 14:39:09.118" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20220714 14:39:09.117" endtime="20220714 14:39:09.118"/>
</kw>
<msg timestamp="20220714 14:39:09.119" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20220714 14:39:08.271" endtime="20220714 14:39:09.119"/>
</kw>
<kw name="Then expected status code &quot;200&quot;" library="kws_shared" sourcename="Then expected status code &quot;${expected}&quot;">
<doc>Keyword responsible for validating the status code upon test requirement.</doc>
<msg timestamp="20220714 14:39:09.122" level="TRACE">Arguments: [ ${expected}='200' ]</msg>
<kw name="Status Should Be" library="RequestsLibrary">
<arg>${expected}</arg>
<doc>Fails if response status code is different than the expected.</doc>
<msg timestamp="20220714 14:39:09.124" level="TRACE">Arguments: [ '200' ]</msg>
<msg timestamp="20220714 14:39:09.124" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20220714 14:39:09.123" endtime="20220714 14:39:09.124"/>
</kw>
<msg timestamp="20220714 14:39:09.125" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20220714 14:39:09.121" endtime="20220714 14:39:09.125"/>
</kw>
<kw name="And the contract of the request &quot;order registered successfully&quot;" library="kws_shared" sourcename="And the contract of the request &quot;${schema}&quot;">
<doc>Keyword responsible for getting the schema model received by parameter by gherkin and validating it with the api response.</doc>
<msg timestamp="20220714 14:39:09.128" level="TRACE">Arguments: [ ${schema}='order registered successfully' ]</msg>
<kw name="Get Schema Json" library="helper">
<var>${arg_schema}</var>
<arg>${schema}</arg>
<doc>Keyword responsável por pegar o arquivo "schemas.json"
Converte para json e retorna o arquivo formatado.</doc>
<msg timestamp="20220714 14:39:09.130" level="TRACE">Arguments: [ ${text}='order registered successfully' ]</msg>
<kw name="Get File" library="OperatingSystem">
<var>${file}</var>
<arg>${ROOT}/resource/data/schemas/schemas.json</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20220714 14:39:09.132" level="TRACE">Arguments: [ 'C:\\Users\\super\\workspace\\Projeto\\automacao_pet/resource/data/schemas/schemas.json' ]</msg>
<msg timestamp="20220714 14:39:09.132" level="INFO" html="true">Getting file '&lt;a href="file://C:\Users\super\workspace\Projeto\automacao_pet\resource\data\schemas\schemas.json"&gt;C:\Users\super\workspace\Projeto\automacao_pet\resource\data\schemas\schemas.json&lt;/a&gt;'.</msg>
<msg timestamp="20220714 14:39:09.133" level="TRACE">Return: '{\n    "petId successfully": "api_pet/get_petid.json",\n    "pet registered successfully": "api_pet/post_pet.json",\n    "orderId successfully": "api_store/get_store_orderid.json",\n    "order registered successfully": "api_store/post_store.json",\n    "pet changed successfully": "api_pet/put_pet.json"\n}'</msg>
<msg timestamp="20220714 14:39:09.134" level="INFO">${file} = {
    "petId successfully": "api_pet/get_petid.json",
    "pet registered successfully": "api_pet/post_pet.json",
    "orderId successfully": "api_store/get_store_orderid.json",
    "order registered ...</msg>
<status status="PASS" starttime="20220714 14:39:09.131" endtime="20220714 14:39:09.134"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${json}</var>
<arg>json.loads($file)</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<msg timestamp="20220714 14:39:09.135" level="TRACE">Arguments: [ 'json.loads($file)' | 'json' ]</msg>
<msg timestamp="20220714 14:39:09.136" level="TRACE">Return: {'order registered successfully': 'api_store/post_store.json',
 'orderId successfully': 'api_store/get_store_orderid.json',
 'pet changed successfully': 'api_pet/put_pet.json',
 'pet registered successfully': 'api_pet/post_pet.json',
 'petId successfully': 'api_pet/get_petid.json'}</msg>
<msg timestamp="20220714 14:39:09.136" level="INFO">${json} = {'petId successfully': 'api_pet/get_petid.json', 'pet registered successfully': 'api_pet/post_pet.json', 'orderId successfully': 'api_store/get_store_orderid.json', 'order registered successfully': 'a...</msg>
<status status="PASS" starttime="20220714 14:39:09.134" endtime="20220714 14:39:09.136"/>
</kw>
<kw name="Get From Dictionary" library="Collections">
<var>${json_schemas}</var>
<arg>${json}</arg>
<arg>${text}</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<msg timestamp="20220714 14:39:09.139" level="TRACE">Arguments: [ {'order registered successfully': 'api_store/post_store.json',
 'orderId successfully': 'api_store/get_store_orderid.json',
 'pet changed successfully': 'api_pet/put_pet.json',
 'pet registered successfully': 'api_pet/post_pet.json',
 'petId successfully': 'api_pet/get_petid.json'} | 'order registered successfully' ]</msg>
<msg timestamp="20220714 14:39:09.139" level="TRACE">Return: 'api_store/post_store.json'</msg>
<msg timestamp="20220714 14:39:09.139" level="INFO">${json_schemas} = api_store/post_store.json</msg>
<status status="PASS" starttime="20220714 14:39:09.137" endtime="20220714 14:39:09.139"/>
</kw>
<msg timestamp="20220714 14:39:09.140" level="TRACE">Return: 'api_store/post_store.json'</msg>
<msg timestamp="20220714 14:39:09.140" level="INFO">${arg_schema} = api_store/post_store.json</msg>
<status status="PASS" starttime="20220714 14:39:09.129" endtime="20220714 14:39:09.140"/>
</kw>
<kw name="Validate Jsonschema From File" library="JsonValidator">
<arg>${response.text}</arg>
<arg>${ROOT}/resource/data/schemas/${arg_schema}</arg>
<doc>Validate JSON according to schema, loaded from a file.</doc>
<msg timestamp="20220714 14:39:09.144" level="TRACE">Arguments: [ '{"id":5,"petId":0,"quantity":0,"shipDate":"2022-07-07T11:38:55.172+0000","status":"placed","complete":true}' | 'C:\\Users\\super\\workspace\\Projeto\\automacao_pet/resource/data/schemas/api_store/post_store.json' ]</msg>
<msg timestamp="20220714 14:39:09.156" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20220714 14:39:09.141" endtime="20220714 14:39:09.156"/>
</kw>
<msg timestamp="20220714 14:39:09.157" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20220714 14:39:09.127" endtime="20220714 14:39:09.158"/>
</kw>
<doc>Test responsible for making the user able to register a new animal by sending a valid body.</doc>
<tag>API_store</tag>
<tag>EP_order</tag>
<tag>TC10</tag>
<status status="PASS" starttime="20220714 14:39:08.267" endtime="20220714 14:39:09.160"/>
</test>
<test id="s1-s2-s2-t2" name="TC11: Unable to insert a new order without sending body">
<kw name="Given perform a POST request &quot;post/store/order&quot; endpoint sending body &quot;&quot;" library="POST_STORE_ORDER" sourcename="Given perform a POST request &quot;post/store/order&quot; endpoint sending body &quot;${body}&quot;">
<msg timestamp="20220714 14:39:09.171" level="TRACE">Arguments: [ ${body}='' ]</msg>
<kw name="Create Dictionary" library="BuiltIn">
<var>&amp;{headers}</var>
<arg>Content-Type=application/json</arg>
<doc>Creates and returns a dictionary based on the given ``items``.</doc>
<msg timestamp="20220714 14:39:09.172" level="TRACE">Arguments: [ 'Content-Type=application/json' ]</msg>
<msg timestamp="20220714 14:39:09.173" level="TRACE">Return: {'Content-Type': 'application/json'}</msg>
<msg timestamp="20220714 14:39:09.173" level="INFO">&amp;{headers} = { Content-Type=application/json }</msg>
<status status="PASS" starttime="20220714 14:39:09.172" endtime="20220714 14:39:09.173"/>
</kw>
<if>
<branch type="IF" condition="&quot;${body}&quot; == &quot;valid&quot;">
<kw name="Get File" library="OperatingSystem">
<var>${body}</var>
<arg>${BODY_POST_STORE}</arg>
<doc>Returns the contents of a specified file.</doc>
<status status="NOT RUN" starttime="20220714 14:39:09.175" endtime="20220714 14:39:09.175"/>
</kw>
<kw name="Evaluate" library="BuiltIn">
<var>${new_body}</var>
<arg>json.loads($body)</arg>
<arg>json</arg>
<doc>Evaluates the given expression in Python and returns the result.</doc>
<status status="NOT RUN" starttime="20220714 14:39:09.175" endtime="20220714 14:39:09.175"/>
</kw>
<kw name="POST" library="RequestsLibrary">
<var>${response}</var>
<arg>${URL_BASE.base}${URL_API_ENDPOINT.order}</arg>
<arg>expected_status=any</arg>
<arg>json=${new_body}</arg>
<arg>headers=&amp;{headers}</arg>
<doc>Sends a POST request.</doc>
<status status="NOT RUN" starttime="20220714 14:39:09.176" endtime="20220714 14:39:09.177"/>
</kw>
<kw name="Log" library="BuiltIn">
<arg>${response.json()["id"]}</arg>
<doc>Logs the given message with the given level.</doc>
<status status="NOT RUN" starttime="20220714 14:39:09.177" endtime="20220714 14:39:09.178"/>
</kw>
<kw name="Get From Dictionary" library="Collections">
<var>${ID}</var>
<arg>${response.json()}</arg>
<arg>id</arg>
<doc>Returns a value from the given ``dictionary`` based on the given ``key``.</doc>
<status status="NOT RUN" starttime="20220714 14:39:09.178" endtime="20220714 14:39:09.178"/>
</kw>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${ID}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<status status="NOT RUN" starttime="20220714 14:39:09.179" endtime="20220714 14:39:09.179"/>
</kw>
<status status="NOT RUN" starttime="20220714 14:39:09.174" endtime="20220714 14:39:09.179"/>
</branch>
<branch type="ELSE">
<kw name="Get File" library="OperatingSystem">
<var>${new_body}</var>
<arg>${BODY_EMPTY}</arg>
<doc>Returns the contents of a specified file.</doc>
<msg timestamp="20220714 14:39:09.182" level="TRACE">Arguments: [ 'C:\\Users\\super\\workspace\\Projeto\\automacao_pet/resource/data/input/body_empty.json' ]</msg>
<msg timestamp="20220714 14:39:09.183" level="INFO" html="true">Getting file '&lt;a href="file://C:\Users\super\workspace\Projeto\automacao_pet\resource\data\input\body_empty.json"&gt;C:\Users\super\workspace\Projeto\automacao_pet\resource\data\input\body_empty.json&lt;/a&gt;'.</msg>
<msg timestamp="20220714 14:39:09.184" level="TRACE">Return: ''</msg>
<msg timestamp="20220714 14:39:09.185" level="INFO">${new_body} = </msg>
<status status="PASS" starttime="20220714 14:39:09.181" endtime="20220714 14:39:09.185"/>
</kw>
<kw name="POST" library="RequestsLibrary">
<var>${response}</var>
<arg>${URL_BASE.base}${URL_API_ENDPOINT.order}</arg>
<arg>data=${new_body}</arg>
<arg>headers=&amp;{headers}</arg>
<arg>expected_status=any</arg>
<doc>Sends a POST request.</doc>
<msg timestamp="20220714 14:39:09.192" level="TRACE">Arguments: [ 'https://petstore.swagger.io/v2/store/order' | data='' | headers={'Content-Type': 'application/json'} | expected_status='any' ]</msg>
<msg timestamp="20220714 14:39:09.199" level="DEBUG">Starting new HTTPS connection (1): petstore.swagger.io:443</msg>
<msg timestamp="20220714 14:39:10.002" level="DEBUG">https://petstore.swagger.io:443 "POST /v2/store/order HTTP/1.1" 400 None</msg>
<msg timestamp="20220714 14:39:10.008" level="INFO">POST Request : url=https://petstore.swagger.io/v2/store/order 
 path_url=/v2/store/order 
 headers={'User-Agent': 'python-requests/2.25.1', 'Accept-Encoding': 'gzip, deflate', 'Accept': '*/*', 'Connection': 'keep-alive', 'Content-Type': 'application/json', 'Content-Length': '0'} 
 body=None 
 </msg>
<msg timestamp="20220714 14:39:10.008" level="INFO">POST Response : url=https://petstore.swagger.io/v2/store/order 
 status=400, reason=Bad Request 
 headers={'Date': 'Thu, 14 Jul 2022 17:39:09 GMT', 'Content-Type': 'application/json', 'Transfer-Encoding': 'chunked', 'Connection': 'keep-alive', 'Access-Control-Allow-Origin': '*', 'Access-Control-Allow-Methods': 'GET, POST, DELETE, PUT', 'Access-Control-Allow-Headers': 'Content-Type, api_key, Authorization', 'Server': 'Jetty(9.2.9.v20150224)'} 
 body={"code":1,"type":"error","message":"No data"} 
 </msg>
<msg timestamp="20220714 14:39:10.009" level="TRACE">Return: &lt;Response [400]&gt;</msg>
<msg timestamp="20220714 14:39:10.009" level="INFO">${response} = &lt;Response [400]&gt;</msg>
<status status="PASS" starttime="20220714 14:39:09.187" endtime="20220714 14:39:10.009"/>
</kw>
<status status="PASS" starttime="20220714 14:39:09.180" endtime="20220714 14:39:10.009"/>
</branch>
<status status="PASS" starttime="20220714 14:39:09.174" endtime="20220714 14:39:10.010"/>
</if>
<kw name="Set Test Variable" library="BuiltIn">
<arg>${response}</arg>
<doc>Makes a variable available everywhere within the scope of the current test.</doc>
<msg timestamp="20220714 14:39:10.011" level="TRACE">Arguments: [ '${response}' ]</msg>
<msg timestamp="20220714 14:39:10.013" level="INFO">${response} = &lt;Response [400]&gt;</msg>
<msg timestamp="20220714 14:39:10.013" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20220714 14:39:10.010" endtime="20220714 14:39:10.014"/>
</kw>
<msg timestamp="20220714 14:39:10.014" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20220714 14:39:09.170" endtime="20220714 14:39:10.014"/>
</kw>
<kw name="Then expected status code &quot;400&quot;" library="kws_shared" sourcename="Then expected status code &quot;${expected}&quot;">
<doc>Keyword responsible for validating the status code upon test requirement.</doc>
<msg timestamp="20220714 14:39:10.018" level="TRACE">Arguments: [ ${expected}='400' ]</msg>
<kw name="Status Should Be" library="RequestsLibrary">
<arg>${expected}</arg>
<doc>Fails if response status code is different than the expected.</doc>
<msg timestamp="20220714 14:39:10.019" level="TRACE">Arguments: [ '400' ]</msg>
<msg timestamp="20220714 14:39:10.019" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20220714 14:39:10.018" endtime="20220714 14:39:10.020"/>
</kw>
<msg timestamp="20220714 14:39:10.020" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20220714 14:39:10.016" endtime="20220714 14:39:10.020"/>
</kw>
<kw name="And the request must contain the return message &quot;No data&quot;" library="kws_shared" sourcename="And the request must contain the return message &quot;${message}&quot;">
<msg timestamp="20220714 14:39:10.023" level="TRACE">Arguments: [ ${message}='No data' ]</msg>
<kw name="Should Contain" library="BuiltIn">
<arg>${response.text}</arg>
<arg>"${message}"</arg>
<doc>Fails if ``container`` does not contain ``item`` one or more times.</doc>
<msg timestamp="20220714 14:39:10.027" level="TRACE">Arguments: [ '{"code":1,"type":"error","message":"No data"}' | '"No data"' ]</msg>
<msg timestamp="20220714 14:39:10.028" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20220714 14:39:10.024" endtime="20220714 14:39:10.028"/>
</kw>
<msg timestamp="20220714 14:39:10.029" level="TRACE">Return: None</msg>
<status status="PASS" starttime="20220714 14:39:10.022" endtime="20220714 14:39:10.029"/>
</kw>
<doc>Test responsible for validating that the user cannot register a new animal when he stops sending the body.</doc>
<tag>API_store</tag>
<tag>EP_order</tag>
<tag>TC11</tag>
<status status="PASS" starttime="20220714 14:39:09.167" endtime="20220714 14:39:10.031"/>
</test>
<status status="PASS" starttime="20220714 14:39:08.173" endtime="20220714 14:39:10.037"/>
</suite>
<status status="FAIL" starttime="20220714 14:39:03.258" endtime="20220714 14:39:10.049"/>
</suite>
<status status="FAIL" starttime="20220714 14:38:53.051" endtime="20220714 14:39:10.063"/>
</suite>
<statistics>
<total>
<stat pass="12" fail="1" skip="0">All Tests</stat>
</total>
<tag>
<stat pass="7" fail="0" skip="0">API_pet</stat>
<stat pass="5" fail="1" skip="0">API_store</stat>
<stat pass="2" fail="0" skip="0">EP_order</stat>
<stat pass="3" fail="1" skip="0">EP_orderId</stat>
<stat pass="2" fail="0" skip="0">EP_pet</stat>
<stat pass="3" fail="0" skip="0">EP_petId</stat>
<stat pass="2" fail="0" skip="0">EP_put</stat>
<stat pass="1" fail="0" skip="0">TC01</stat>
<stat pass="1" fail="0" skip="0">TC02</stat>
<stat pass="1" fail="0" skip="0">TC03</stat>
<stat pass="1" fail="0" skip="0">TC04</stat>
<stat pass="1" fail="0" skip="0">TC05</stat>
<stat pass="1" fail="0" skip="0">TC06</stat>
<stat pass="1" fail="0" skip="0">TC07</stat>
<stat pass="0" fail="1" skip="0">TC08</stat>
<stat pass="1" fail="0" skip="0">TC09</stat>
<stat pass="1" fail="0" skip="0">TC10</stat>
<stat pass="1" fail="0" skip="0">TC11</stat>
<stat pass="1" fail="0" skip="0">TC12</stat>
<stat pass="1" fail="0" skip="0">TC13</stat>
</tag>
<suite>
<stat pass="12" fail="1" skip="0" id="s1" name="Tests">Tests</stat>
<stat pass="7" fail="0" skip="0" id="s1-s1" name="Api Pet">Tests.Api Pet</stat>
<stat pass="3" fail="0" skip="0" id="s1-s1-s1" name="GET PET PETID">Tests.Api Pet.GET PET PETID</stat>
<stat pass="2" fail="0" skip="0" id="s1-s1-s2" name="POST PET">Tests.Api Pet.POST PET</stat>
<stat pass="2" fail="0" skip="0" id="s1-s1-s3" name="PUT PET">Tests.Api Pet.PUT PET</stat>
<stat pass="5" fail="1" skip="0" id="s1-s2" name="Api Store">Tests.Api Store</stat>
<stat pass="3" fail="1" skip="0" id="s1-s2-s1" name="GET STORE ORDER ORDERID">Tests.Api Store.GET STORE ORDER ORDERID</stat>
<stat pass="2" fail="0" skip="0" id="s1-s2-s2" name="POST STORE ORDER">Tests.Api Store.POST STORE ORDER</stat>
</suite>
</statistics>
<errors>
<msg timestamp="20220714 14:38:55.231" level="WARN">Imported library 'C:\Users\super\workspace\Projeto\automacao_pet\resource\utils\config_helper.py' contains no keywords.</msg>
</errors>
</robot>
